{
  "version": 3,
  "file": "angular2-qrscanner.umd.min.js",
  "sources": [
    "ng://angular2-qrscanner/out/lib/qr-decoder/alignpat.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/perpesctivetransform.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/bitmat.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/grid.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/errorlevel.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/formatinf.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/version.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/findpat.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/detector.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/gf256.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/rsdecoder.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/datamask.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/bmparser.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/datablock.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/databr.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/decoder.ts",
    "ng://angular2-qrscanner/out/lib/qr-decoder/qrcode.ts",
    "ng://angular2-qrscanner/out/qr-scanner.component.ts",
    "ng://angular2-qrscanner/out/qr-scanner.module.ts"
  ],
  "sourcesContent": [
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nexport class  AlignmentPattern{\r\n\tx:any;\r\n\ty: any;\r\n\tcount = 1;\r\n\testimatedModuleSize: any\r\n\tconstructor(posX: any, posY: any,  estimatedModuleSize: any){\r\n\t\tthis.x=posX;\r\n\t\tthis.y=posY;\r\n\t\tthis.estimatedModuleSize = estimatedModuleSize;\r\n\t}\r\n\r\n\tget EstimatedModuleSize()\r\n\t{\r\n\t\treturn this.estimatedModuleSize;\r\n\t};\r\n\r\n\tget Count()\r\n\t{\r\n\t\treturn this.count;\r\n\t};\r\n\tget X()\r\n\t{\r\n\t\treturn Math.floor(this.x);\r\n\t};\r\n\tget Y()\r\n\t{\r\n\t\treturn Math.floor(this.y);\r\n\t};\r\n\r\n\r\n\tincrementCount = function()\r\n\t{\r\n\t\tthis.count++;\r\n\t}\r\n\taboutEquals=function( moduleSize: any,  i: any,  j: any)\r\n\t{\r\n\t\tif (Math.abs(i - this.y) <= moduleSize && Math.abs(j - this.x) <= moduleSize)\r\n\t\t{\r\n\t\t\tvar moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\r\n\t\t\treturn moduleSizeDiff <= 1.0 || moduleSizeDiff / this.estimatedModuleSize <= 1.0;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport class AlignmentPatternFinder{\r\n\timage:any;\r\n\tpossibleCenters = new Array();\r\n\tstartX:any;\r\n\tstartY:any;\r\n\twidth:any;\r\n\theight:any;\r\n\tmoduleSize:any;\r\n\tcrossCheckStateCount = new Array(0,0,0);\r\n\tresultPointCallback:any;\r\n\timageWidth:number;\r\n\timageHeight: number;\r\n\r\n\tconstructor( image: any,  startX: any,  startY: any,  width: any,  height: any,  moduleSize: any, imageWidth:number, imageHeight: number, resultPointCallback: any){\r\n\t\tthis.image = image;\r\n\r\n\t\tthis.startX = startX;\r\n\t\tthis.startY = startY;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.moduleSize = moduleSize;\r\n\t\tthis.resultPointCallback = resultPointCallback;\r\n\t\tthis.imageWidth = imageWidth;\r\n\t\tthis.imageHeight = imageHeight;\r\n\r\n\t}\r\n\r\n\tcenterFromEnd=function(stateCount:any,  end:any)\r\n\t{\r\n\t\treturn  (end - stateCount[2]) - stateCount[1] / 2.0;\r\n\t}\r\n\tfoundPatternCross = function(stateCount:any)\r\n\t{\r\n\t\tvar moduleSize = this.moduleSize;\r\n\t\tvar maxVariance = moduleSize / 2.0;\r\n\t\tfor (var i = 0; i < 3; i++)\r\n\t\t{\r\n\t\t\tif (Math.abs(moduleSize - stateCount[i]) >= maxVariance)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tcrossCheckVertical=function( startI:any,  centerJ:any,  maxCount:any,  originalStateCountTotal:any)\r\n\t{\r\n\t\tvar image = this.image;\r\n\r\n\t\tvar maxI = this.imageHeight;\r\n\t\tvar stateCount = this.crossCheckStateCount;\r\n\t\tstateCount[0] = 0;\r\n\t\tstateCount[1] = 0;\r\n\t\tstateCount[2] = 0;\r\n\r\n\t\t// Start counting up from center\r\n\t\tvar i = startI;\r\n\t\twhile (i >= 0 && image[centerJ + i*this.imageWidth] && stateCount[1] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[1]++;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\t// If already too many modules in this state or ran off the edge:\r\n\t\tif (i < 0 || stateCount[1] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i >= 0 && !image[centerJ + i*this.imageWidth] && stateCount[0] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[0]++;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\tif (stateCount[0] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\t// Now also count down from center\r\n\t\ti = startI + 1;\r\n\t\twhile (i < maxI && image[centerJ + i*this.imageWidth] && stateCount[1] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[1]++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (i == maxI || stateCount[1] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i < maxI && !image[centerJ + i*this.imageWidth] && stateCount[2] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[2]++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (stateCount[2] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\tvar stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\r\n\t\tif (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\treturn this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount, i):NaN;\r\n\t}\r\n\r\n\thandlePossibleCenter=function( stateCount:any,  i:any,  j:any)\r\n\t{\r\n\t\tvar stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\r\n\t\tvar centerJ = this.centerFromEnd(stateCount, j);\r\n\t\tvar centerI = this.crossCheckVertical(i, Math.floor (centerJ), 2 * stateCount[1], stateCountTotal);\r\n\t\tif (!isNaN(centerI))\r\n\t\t{\r\n\t\t\tvar estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3.0;\r\n\t\t\tvar max = this.possibleCenters.length;\r\n\t\t\tfor (var index = 0; index < max; index++)\r\n\t\t\t{\r\n\t\t\t\tvar center =  this.possibleCenters[index];\r\n\t\t\t\t// Look for about the same center and module size:\r\n\t\t\t\tif (center.aboutEquals(estimatedModuleSize, centerI, centerJ))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Hadn't found this before; save it\r\n\t\t\tvar point = new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\r\n\t\t\tthis.possibleCenters.push(point);\r\n\t\t\tif (this.resultPointCallback != null)\r\n\t\t\t{\r\n\t\t\t\tthis.resultPointCallback.foundPossibleResultPoint(point);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfind = function()\r\n\t{\r\n\t\tvar startX = this.startX;\r\n\t\tvar height = this.height;\r\n\t\tvar maxJ = startX + this.width;\r\n\t\tvar middleI = this.startY + (height >> 1);\r\n\t\t// We are looking for black/white/black modules in 1:1:1 ratio;\r\n\t\t// this tracks the number of black/white/black modules seen so far\r\n\t\tvar stateCount = new Array(0,0,0);\r\n\t\tfor (var iGen = 0; iGen < height; iGen++)\r\n\t\t{\r\n\t\t\t// Search from middle outwards\r\n\t\t\tvar i = middleI + ((iGen & 0x01) == 0?((iGen + 1) >> 1):- ((iGen + 1) >> 1));\r\n\t\t\tstateCount[0] = 0;\r\n\t\t\tstateCount[1] = 0;\r\n\t\t\tstateCount[2] = 0;\r\n\t\t\tvar j = startX;\r\n\t\t\t// Burn off leading white pixels before anything else; if we start in the middle of\r\n\t\t\t// a white run, it doesn't make sense to count its length, since we don't know if the\r\n\t\t\t// white run continued to the left of the start point\r\n\t\t\twhile (j < maxJ && !this.image[j + this.imageWidth* i])\r\n\t\t\t{\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\tvar currentState = 0;\r\n\t\t\twhile (j < maxJ)\r\n\t\t\t{\r\n\t\t\t\tif (this.image[j + i*this.imageWidth])\r\n\t\t\t\t{\r\n\t\t\t\t\t// Black pixel\r\n\t\t\t\t\tif (currentState == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting black pixels\r\n\t\t\t\t\t\tstateCount[currentState]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting white pixels\r\n\t\t\t\t\t\tif (currentState == 2)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// A winner?\r\n\t\t\t\t\t\t\tif (this.foundPatternCross(stateCount))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Yes\r\n\t\t\t\t\t\t\t\tvar confirmed = this.handlePossibleCenter(stateCount, i, j);\r\n\t\t\t\t\t\t\t\tif (confirmed != null)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\treturn confirmed;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstateCount[0] = stateCount[2];\r\n\t\t\t\t\t\t\tstateCount[1] = 1;\r\n\t\t\t\t\t\t\tstateCount[2] = 0;\r\n\t\t\t\t\t\t\tcurrentState = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstateCount[++currentState]++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// White pixel\r\n\t\t\t\t\tif (currentState == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting black pixels\r\n\t\t\t\t\t\tcurrentState++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstateCount[currentState]++;\r\n\t\t\t\t}\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\tif (this.foundPatternCross(stateCount))\r\n\t\t\t{\r\n\t\t\t\tvar confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\r\n\t\t\t\tif (confirmed != null)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn confirmed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Hmm, nothing we saw was observed and confirmed twice. If we had\r\n\t\t// any guess at all, return it.\r\n\t\tif (!(this.possibleCenters.length == 0))\r\n\t\t{\r\n\t\t\treturn  this.possibleCenters[0];\r\n\t\t}\r\n\r\n\t\tthrow `Couldn't find enough alignment patterns`;\r\n\t}\r\n}\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011\r\n\r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n\r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\nexport class PerspectiveTransform{\r\n  a11:number;\r\n  a12:number;\r\n  a13:number;\r\n  a21:number;\r\n  a22:number;\r\n  a23:number;\r\n  a31:number;\r\n  a32:number;\r\n  a33:number;\r\n\r\n  constructor( a11:number,  a21:number,  a31:number,  a12:number,  a22:number,  a32:number,  a13:number,  a23:number,  a33:number) {\r\n    this.a11 = a11;\r\n    this.a12 = a12;\r\n    this.a13 = a13;\r\n    this.a21 = a21;\r\n    this.a22 = a22;\r\n    this.a23 = a23;\r\n    this.a31 = a31;\r\n    this.a32 = a32;\r\n    this.a33 = a33;\r\n  }\r\n  transformPoints1=function( points:any)\r\n  {\r\n    var max = points.length;\r\n    var a11 = this.a11;\r\n    var a12 = this.a12;\r\n    var a13 = this.a13;\r\n    var a21 = this.a21;\r\n    var a22 = this.a22;\r\n    var a23 = this.a23;\r\n    var a31 = this.a31;\r\n    var a32 = this.a32;\r\n    var a33 = this.a33;\r\n    for (var i = 0; i < max; i += 2)\r\n    {\r\n      var x = points[i];\r\n      var y = points[i + 1];\r\n      var denominator = a13 * x + a23 * y + a33;\r\n      points[i] = (a11 * x + a21 * y + a31) / denominator;\r\n      points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\r\n    }\r\n  }\r\n  transformPoints2=function(xValues:any, yValues:any)\r\n  {\r\n    var n = xValues.length;\r\n    for (var i = 0; i < n; i++)\r\n    {\r\n      var x = xValues[i];\r\n      var y = yValues[i];\r\n      var denominator = this.a13 * x + this.a23 * y + this.a33;\r\n      xValues[i] = (this.a11 * x + this.a21 * y + this.a31) / denominator;\r\n      yValues[i] = (this.a12 * x + this.a22 * y + this.a32) / denominator;\r\n    }\r\n  }\r\n  buildAdjoint=function()\r\n  {\r\n    // Adjoint is the transpose of the cofactor matrix:\r\n    return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\r\n  }\r\n  times=function( other:any)\r\n  {\r\n    return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 +this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\r\n  }\r\n\r\n  static quadrilateralToQuadrilateral( x0: any,  y0: any,  x1: any,  y1: any,  x2: any,  y2: any,  x3: any,  y3: any\r\n    ,  x0p: any,  y0p: any,  x1p: any,  y1p: any,  x2p: any,  y2p: any,  x3p: any,  y3p: any)\r\n  {\r\n\r\n    var qToS = this.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\r\n    var sToQ = this.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\r\n    return sToQ.times(qToS);\r\n  }\r\n\r\n  static squareToQuadrilateral( x0:any,  y0:any,  x1:any,  y1:any,  x2:any,  y2:any,  x3:any,  y3:any)\r\n  {\r\n    var dy2 = y3 - y2;\r\n    var dy3 = y0 - y1 + y2 - y3;\r\n    if (dy2 == 0.0 && dy3 == 0.0)\r\n    {\r\n      return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\r\n    }\r\n    else\r\n    {\r\n      var dx1 = x1 - x2;\r\n      var dx2 = x3 - x2;\r\n      var dx3 = x0 - x1 + x2 - x3;\r\n      var dy1 = y1 - y2;\r\n      var denominator = dx1 * dy2 - dx2 * dy1;\r\n      var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\r\n      var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\r\n      return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\r\n    }\r\n  }\r\n  static quadrilateralToSquare( x0:any,  y0:any,  x1:any,  y1:any,  x2:any,  y2:any,  x3:any,  y3:any)\r\n  {\r\n    // Here, the adjoint serves as the inverse:\r\n    const t = this.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3);\r\n    return t.buildAdjoint();\r\n  }\r\n}",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\n\r\nexport class BitMatrix{\r\n\twidth:number;\r\n\theight: number;\r\n\trowSize: number;\r\n\tbits: any;\r\n\tconstructor(width: number, height?: number){\r\n\t\tif(!height)\r\n\t\t\theight=width;\r\n\t\tif (width < 1 || height < 1)\r\n\t\t{\r\n\t\t\tthrow \"Both dimensions must be greater than 0\";\r\n\t\t}\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.rowSize = width >> 5;\r\n\t\tif ((width & 0x1f) != 0)\r\n\t\t{\r\n\t\t\tthis.rowSize++;\r\n\t\t}\r\n\t\tthis.bits = new Array(this.rowSize * height);\r\n\t\tfor(var i=0;i<this.bits.length;i++)\r\n\t\t\tthis.bits[i]=0;\r\n\t}\r\n\r\n\r\n\tget Width(): number{\r\n\t\treturn this.width;\r\n\t};\r\n\tget Height(): number\r\n\t{\r\n\t\treturn this.height;\r\n\t};\r\n\tget Dimension(): number\r\n\t{\r\n\t\tif (this.width != this.height)\r\n\t\t{\r\n\t\t\tthrow \"Can't call getDimension() on a non-square matrix\";\r\n\t\t}\r\n\t\treturn this.width;\r\n\t};\r\n\r\n\tURShift( number:any,  bits:any):any\r\n\t{\r\n\t\tif (number >= 0)\r\n\t\t\treturn number >> bits;\r\n\t\telse\r\n\t\t\treturn (number >> bits) + (2 << ~bits);\r\n\t}\r\n\r\n\r\n\tget_Renamed( x: any,  y: any): any\r\n\t{\r\n\t\tvar offset = y * this.rowSize + (x >> 5);\r\n\t\treturn ((this.URShift(this.bits[offset], (x & 0x1f))) & 1) != 0;\r\n\t}\r\n\tset_Renamed( x: any,  y: any): any\r\n\t{\r\n\t\tvar offset = y * this.rowSize + (x >> 5);\r\n\t\tthis.bits[offset] |= 1 << (x & 0x1f);\r\n\t}\r\n\tflip( x: any,  y: any): void\r\n\t{\r\n\t\tvar offset = y * this.rowSize + (x >> 5);\r\n\t\tthis.bits[offset] ^= 1 << (x & 0x1f);\r\n\t}\r\n\tclear(): void\r\n\t{\r\n\t\tvar max = this.bits.length;\r\n\t\tfor (var i = 0; i < max; i++)\r\n\t\t{\r\n\t\t\tthis.bits[i] = 0;\r\n\t\t}\r\n\t}\r\n\tsetRegion( left: any,  top: any,  width: any,  height: any): void\r\n\t{\r\n\t\tif (top < 0 || left < 0)\r\n\t\t{\r\n\t\t\tthrow \"Left and top must be nonnegative\";\r\n\t\t}\r\n\t\tif (height < 1 || width < 1)\r\n\t\t{\r\n\t\t\tthrow \"Height and width must be at least 1\";\r\n\t\t}\r\n\t\tvar right = left + width;\r\n\t\tvar bottom = top + height;\r\n\t\tif (bottom > this.height || right > this.width)\r\n\t\t{\r\n\t\t\tthrow \"The region must fit inside the matrix\";\r\n\t\t}\r\n\t\tfor (var y = top; y < bottom; y++)\r\n\t\t{\r\n\t\t\tvar offset = y * this.rowSize;\r\n\t\t\tfor (var x = left; x < right; x++)\r\n\t\t\t{\r\n\t\t\t\tthis.bits[offset + (x >> 5)] |= 1 << (x & 0x1f);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\n\r\nimport {PerspectiveTransform} from \"./perpesctivetransform\";\r\n\r\nimport {BitMatrix} from \"./bitmat\"\r\n\r\n\r\nexport class GridSampler{\r\n\r\n\twidth: number;\r\n\theight: number;\r\n\r\n\tconstructor(width:any, height:any){\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\tcheckAndNudgePoints( image:any,  points:any): void\r\n\t{\r\n\t\tvar width = this.width;\r\n\t\tvar height = this.height;\r\n\t\t// Check and nudge points from start until we see some that are OK:\r\n\t\tvar nudged = true;\r\n\t\tfor (var offset = 0; offset < points.length && nudged; offset += 2)\r\n\t\t{\r\n\t\t\tvar x = Math.floor (points[offset]);\r\n\t\t\tvar y = Math.floor( points[offset + 1]);\r\n\t\t\tif (x < - 1 || x > width || y < - 1 || y > height)\r\n\t\t\t{\r\n\t\t\t\tthrow \"Error.checkAndNudgePoints \";\r\n\t\t\t}\r\n\t\t\tnudged = false;\r\n\t\t\tif (x == - 1)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset] = 0.0;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\telse if (x == width)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset] = width - 1;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\tif (y == - 1)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset + 1] = 0.0;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\telse if (y == height)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset + 1] = height - 1;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check and nudge points from end:\r\n\t\tnudged = true;\r\n\t\tfor (var offset = points.length - 2; offset >= 0 && nudged; offset -= 2)\r\n\t\t{\r\n\t\t\tvar x = Math.floor( points[offset]);\r\n\t\t\tvar y = Math.floor( points[offset + 1]);\r\n\t\t\tif (x < - 1 || x > width || y < - 1 || y > height)\r\n\t\t\t{\r\n\t\t\t\tthrow \"Error.checkAndNudgePoints \";\r\n\t\t\t}\r\n\t\t\tnudged = false;\r\n\t\t\tif (x == - 1)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset] = 0.0;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\telse if (x == width)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset] = width - 1;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\tif (y == - 1)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset + 1] = 0.0;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t\telse if (y == height)\r\n\t\t\t{\r\n\t\t\t\tpoints[offset + 1] = height - 1;\r\n\t\t\t\tnudged = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tsampleGrid3( image:any,rawImage: any,  dimension:any,  transform:any): any\r\n\t{\r\n\t\tvar bits = new BitMatrix(dimension, dimension);\r\n\t\tvar points = new Array(dimension << 1);\r\n\t\tfor (var y = 0; y < dimension; y++)\r\n\t\t{\r\n\t\t\tvar max = points.length;\r\n\t\t\tvar iValue =  y + 0.5;\r\n\t\t\tfor (var x = 0; x < max; x += 2)\r\n\t\t\t{\r\n\t\t\t\tpoints[x] =  (x >> 1) + 0.5;\r\n\t\t\t\tpoints[x + 1] = iValue;\r\n\t\t\t}\r\n\t\t\ttransform.transformPoints1(points);\r\n\t\t\t// Quick check to see if points transformed to something inside the image;\r\n\t\t\t// sufficient to check the endpoints\r\n\t\t\tthis.checkAndNudgePoints(image, points);\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tfor (var x = 0; x < max; x += 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar xpoint = (Math.floor( points[x]) * 4) + (Math.floor( points[x + 1]) * this.width * 4);\r\n\t\t\t\t\tvar bit = image[Math.floor( points[x])+ this.width* Math.floor( points[x + 1])];\r\n\t\t\t\t\trawImage.data[xpoint] = bit?255:0;\r\n\t\t\t\t\trawImage.data[xpoint+1] = bit?255:0;\r\n\t\t\t\t\trawImage.data[xpoint+2] = 0;\r\n\t\t\t\t\trawImage.data[xpoint+3] = 255;\r\n\t\t\t\t\t//bits[x >> 1][ y]=bit;\r\n\t\t\t\t\tif(bit)\r\n\t\t\t\t\t\tbits.set_Renamed(x >> 1, y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch ( aioobe)\r\n\t\t\t{\r\n\t\t\t\t// This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\r\n\t\t\t\t// transform gets \"twisted\" such that it maps a straight line of points to a set of points\r\n\t\t\t\t// whose endpoints are in bounds, but others are not. There is probably some mathematical\r\n\t\t\t\t// way to detect this about the transformation that I don't know yet.\r\n\t\t\t\t// This results in an ugly runtime exception despite our clever checks above -- can't have\r\n\t\t\t\t// that. We could check each point's coordinates but that feels duplicative. We settle for\r\n\t\t\t\t// catching and wrapping ArrayIndexOutOfBoundsException.\r\n\t\t\t\tthrow \"Error.checkAndNudgePoints\";\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bits;\r\n\t}\r\n\r\n\tsampleGridx( image:any,  dimension:any,  p1ToX:any,  p1ToY:any,  p2ToX:any,  p2ToY:any,  p3ToX:any,  p3ToY:any,  p4ToX:any,  p4ToY:any,  p1FromX:any,  p1FromY:any,  p2FromX:any,  p2FromY:any,  p3FromX:any,  p3FromY:any,  p4FromX:any,  p4FromY:any): any\r\n\t{\r\n\r\n\r\n\t\tvar transform = PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\r\n\r\n\t\treturn this.sampleGrid3(image, {}, dimension, transform);\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011\r\n\r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n\r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nexport class ErrorCorrectionLevel{\r\n\r\n\tstatic forBits( bits:any)\r\n\t{\r\n\t\tif (bits < 0 || bits >= this.FOR_BITS.length)\r\n\t\t{\r\n\t\t\tthrow \"ArgumentException\";\r\n\t\t}\r\n\t\treturn this.FOR_BITS[bits];\r\n\t}\r\n\r\n\tstatic L = new ErrorCorrectionLevel(0, 0x01, \"L\");\r\n\tstatic M = new ErrorCorrectionLevel(1, 0x00, \"M\");\r\n\tstatic Q = new ErrorCorrectionLevel(2, 0x03, \"Q\");\r\n\tstatic H = new ErrorCorrectionLevel(3, 0x02, \"H\");\r\n\tstatic FOR_BITS = new Array( ErrorCorrectionLevel.M, ErrorCorrectionLevel.L, ErrorCorrectionLevel.H, ErrorCorrectionLevel.Q);\r\n\r\n\r\n\tordinal_Renamed_Field:any;\r\n\tbits:any;\r\n\tname:any;\r\n\tconstructor(ordinal:any ,  bits:any, name:any){\r\n\r\n\t\tthis.ordinal_Renamed_Field = ordinal;\r\n\t\tthis.bits = bits;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tget Bits()\r\n\t{\r\n\t\treturn this.bits;\r\n\t};\r\n\tget Name()\r\n\t{\r\n\t\treturn this.name;\r\n\t};\r\n\tordinal()\r\n\t{\r\n\t\treturn this.ordinal_Renamed_Field;\r\n\t}\r\n\r\n}",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011\r\n\r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n\r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\nimport {ErrorCorrectionLevel} from \"./errorlevel\"\r\n\r\n\r\nexport class FormatInformation {\r\n\tstatic FORMAT_INFO_MASK_QR = 0x5412;\r\n\tstatic FORMAT_INFO_DECODE_LOOKUP = new Array(new Array(0x5412, 0x00), new Array(0x5125, 0x01), new Array(0x5E7C, 0x02), new Array(0x5B4B, 0x03), new Array(0x45F9, 0x04), new Array(0x40CE, 0x05), new Array(0x4F97, 0x06), new Array(0x4AA0, 0x07), new Array(0x77C4, 0x08), new Array(0x72F3, 0x09), new Array(0x7DAA, 0x0A), new Array(0x789D, 0x0B), new Array(0x662F, 0x0C), new Array(0x6318, 0x0D), new Array(0x6C41, 0x0E), new Array(0x6976, 0x0F), new Array(0x1689, 0x10), new Array(0x13BE, 0x11), new Array(0x1CE7, 0x12), new Array(0x19D0, 0x13), new Array(0x0762, 0x14), new Array(0x0255, 0x15), new Array(0x0D0C, 0x16), new Array(0x083B, 0x17), new Array(0x355F, 0x18), new Array(0x3068, 0x19), new Array(0x3F31, 0x1A), new Array(0x3A06, 0x1B), new Array(0x24B4, 0x1C), new Array(0x2183, 0x1D), new Array(0x2EDA, 0x1E), new Array(0x2BED, 0x1F));\r\n\tstatic BITS_SET_IN_HALF_BYTE = new Array(0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4);\r\n\tstatic L = new ErrorCorrectionLevel(0, 0x01, \"L\");\r\n\tstatic M = new ErrorCorrectionLevel(1, 0x00, \"M\");\r\n\tstatic Q = new ErrorCorrectionLevel(2, 0x03, \"Q\");\r\n\tstatic H = new ErrorCorrectionLevel(3, 0x02, \"H\");\r\n\tstatic FOR_BITS = new Array(FormatInformation.M, FormatInformation.L, FormatInformation.H, FormatInformation.Q);\r\n\terrorCorrectionLevel: any;\r\n\tdataMask: any;\r\n\r\n\tconstructor(formatInfo: any) {\r\n\t\tthis.errorCorrectionLevel = ErrorCorrectionLevel.forBits((formatInfo >> 3) & 0x03);\r\n\t\tthis.dataMask = (formatInfo & 0x07);\r\n\t}\r\n\r\n\tget ErrorCorrectionLevel() {\r\n\t\treturn this.errorCorrectionLevel;\r\n\t};\r\n\r\n\tget DataMask() {\r\n\t\treturn this.dataMask;\r\n\t};\r\n\r\n\tGetHashCode () {\r\n\t\treturn (this.errorCorrectionLevel.ordinal() << 3) | this.dataMask;\r\n\t}\r\n\r\n\tEquals = function (o: any) {\r\n\t\tvar other = o;\r\n\t\treturn this.errorCorrectionLevel == other.errorCorrectionLevel && this.dataMask == other.dataMask;\r\n\t}\r\n\r\n\tstatic URShift(number: any, bits: any): any {\r\n\t\tif (number >= 0)\r\n\t\t\treturn number >> bits;\r\n\t\telse\r\n\t\t\treturn (number >> bits) + (2 << ~bits);\r\n\t}\r\n\r\n\tstatic numBitsDiffering (a: any, b: any) {\r\n\t\ta ^= b; // a now has a 1 bit exactly where its bit differs with b's\r\n\t\t// Count bits set quickly with a series of lookups:\r\n\t\treturn FormatInformation.BITS_SET_IN_HALF_BYTE[a & 0x0F]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 4) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 8) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 12) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 16) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 20) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 24) & 0x0F)]\r\n\t\t\t+ FormatInformation.BITS_SET_IN_HALF_BYTE[(this.URShift(a, 28) & 0x0F)];\r\n\t}\r\n\r\n\tstatic decodeFormatInformation (maskedFormatInfo: any) {\r\n\t\tvar formatInfo = this.doDecodeFormatInformation(maskedFormatInfo);\r\n\t\tif (formatInfo != null) {\r\n\t\t\treturn formatInfo;\r\n\t\t}\r\n\t\t// Should return null, but, some QR codes apparently\r\n\t\t// do not mask this info. Try again by actually masking the pattern\r\n\t\t// first\r\n\t\treturn this.doDecodeFormatInformation(maskedFormatInfo ^ FormatInformation.FORMAT_INFO_MASK_QR);\r\n\t}\r\n\r\n\tstatic doDecodeFormatInformation (maskedFormatInfo: any) {\r\n\t\t// Find the int in FORMAT_INFO_DECODE_LOOKUP with fewest bits differing\r\n\t\tvar bestDifference = 0xffffffff;\r\n\t\tvar bestFormatInfo = 0;\r\n\t\tfor (var i = 0; i < FormatInformation.FORMAT_INFO_DECODE_LOOKUP.length; i++) {\r\n\t\t\tvar decodeInfo = FormatInformation.FORMAT_INFO_DECODE_LOOKUP[i];\r\n\t\t\tvar targetInfo = decodeInfo[0];\r\n\t\t\tif (targetInfo == maskedFormatInfo) {\r\n\t\t\t\t// Found an exact match\r\n\t\t\t\treturn new FormatInformation(decodeInfo[1]);\r\n\t\t\t}\r\n\t\t\tvar bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo, targetInfo);\r\n\t\t\tif (bitsDifference < bestDifference) {\r\n\t\t\t\tbestFormatInfo = decodeInfo[1];\r\n\t\t\t\tbestDifference = bitsDifference;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits\r\n\t\t// differing means we found a match\r\n\t\tif (bestDifference <= 3) {\r\n\t\t\treturn new FormatInformation(bestFormatInfo);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic forBits (bits: any) {\r\n\t\t{\r\n\t\t\tif (bits < 0 || bits >= FormatInformation.FOR_BITS.length) {\r\n\t\t\t\tthrow \"ArgumentException\";\r\n\t\t\t}\r\n\t\t\treturn FormatInformation.FOR_BITS[bits];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011\r\n\r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n\r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nimport  {BitMatrix} from \"./bitmat\"\r\nimport {FormatInformation} from \"./formatinf\"\r\n\r\nexport class ECB{\r\n\tcount: any;\r\n\tdataCodewords: any;\r\n\tconstructor(count: any,  dataCodewords: any){\r\n\t\tthis.count = count;\r\n\t\tthis.dataCodewords = dataCodewords;\r\n\t}\r\n\tget Count()\r\n\t{\r\n\t\treturn this.count;\r\n\t};\r\n\r\n\tget DataCodewords()\r\n\t{\r\n\t\treturn this.dataCodewords;\r\n\t};\r\n\r\n}\r\n\r\nexport class ECBlocks{\r\n\r\n\tecCodewordsPerBlock: any;\r\n\tecBlocks: any;\r\n\tconstructor( ecCodewordsPerBlock:any,  ecBlocks1:any,  ecBlocks2?:any){\r\n\t\tthis.ecCodewordsPerBlock = ecCodewordsPerBlock;\r\n\t\tif(ecBlocks2)\r\n\t\t\tthis.ecBlocks = new Array(ecBlocks1, ecBlocks2);\r\n\t\telse\r\n\t\t\tthis.ecBlocks = new Array(ecBlocks1);\r\n\t}\r\n\tget ECCodewordsPerBlock()\r\n\t{\r\n\t\treturn this.ecCodewordsPerBlock;\r\n\t};\r\n\tget TotalECCodewords()\r\n\t{\r\n\t\treturn  this.ecCodewordsPerBlock * this.NumBlocks;\r\n\t};\r\n\tget NumBlocks()\r\n\t{\r\n\t\tvar total = 0;\r\n\t\tfor (var i = 0; i < this.ecBlocks.length; i++)\r\n\t\t{\r\n\t\t\ttotal += this.ecBlocks[i].length;\r\n\t\t}\r\n\t\treturn total;\r\n\t};\r\n\r\n\tgetECBlocks=function()\r\n\t{\r\n\t\treturn this.ecBlocks;\r\n\t}\r\n}\r\n\r\n\r\nexport class Version{\r\n\r\n\tversionNumber:any;\r\n\talignmentPatternCenters:any;\r\n\tecBlocks:any;\r\n\ttotalCodewords: any;\r\n\r\n\tconstructor( versionNumber: any,  alignmentPatternCenters: any,  ecBlocks1: any,  ecBlocks2: any,  ecBlocks3: any,  ecBlocks4: any){\r\n\t\tthis.versionNumber = versionNumber;\r\n\t\tthis.alignmentPatternCenters = alignmentPatternCenters;\r\n\t\tthis.ecBlocks = new Array(ecBlocks1, ecBlocks2, ecBlocks3, ecBlocks4);\r\n\r\n\t\tvar total = 0;\r\n\t\tvar ecCodewords = ecBlocks1.ECCodewordsPerBlock;\r\n\t\tvar ecbArray = ecBlocks1.getECBlocks();\r\n\t\tfor (var i = 0; i < ecbArray.length; i++)\r\n\t\t{\r\n\t\t\tvar ecBlock = ecbArray[i];\r\n\t\t\ttotal += ecBlock.Count * (ecBlock.DataCodewords + ecCodewords);\r\n\t\t}\r\n\t\tthis.totalCodewords = total;\r\n\t}\r\n\tget VersionNumber()\r\n\t{\r\n\t\treturn  this.versionNumber;\r\n\t};\r\n\r\n\tget AlignmentPatternCenters()\r\n\t{\r\n\t\treturn  this.alignmentPatternCenters;\r\n\t};\r\n\tget TotalCodewords()\r\n\t{\r\n\t\treturn  this.totalCodewords;\r\n\t};\r\n\tget DimensionForVersion()\r\n\t{\r\n\t\treturn  17 + 4 * this.versionNumber;\r\n\t};\r\n\r\n\tbuildFunctionPattern=function()\r\n\t{\r\n\t\tvar dimension = this.DimensionForVersion;\r\n\t\tvar bitMatrix = new BitMatrix(dimension);\r\n\r\n\t\t// Top left finder pattern + separator + format\r\n\t\tbitMatrix.setRegion(0, 0, 9, 9);\r\n\t\t// Top right finder pattern + separator + format\r\n\t\tbitMatrix.setRegion(dimension - 8, 0, 8, 9);\r\n\t\t// Bottom left finder pattern + separator + format\r\n\t\tbitMatrix.setRegion(0, dimension - 8, 9, 8);\r\n\r\n\t\t// Alignment patterns\r\n\t\tvar max = this.alignmentPatternCenters.length;\r\n\t\tfor (var x = 0; x < max; x++)\r\n\t\t{\r\n\t\t\tvar i = this.alignmentPatternCenters[x] - 2;\r\n\t\t\tfor (var y = 0; y < max; y++)\r\n\t\t\t{\r\n\t\t\t\tif ((x == 0 && (y == 0 || y == max - 1)) || (x == max - 1 && y == 0))\r\n\t\t\t\t{\r\n\t\t\t\t\t// No alignment patterns near the three finder paterns\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tbitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Vertical timing pattern\r\n\t\tbitMatrix.setRegion(6, 9, 1, dimension - 17);\r\n\t\t// Horizontal timing pattern\r\n\t\tbitMatrix.setRegion(9, 6, dimension - 17, 1);\r\n\r\n\t\tif (this.versionNumber > 6)\r\n\t\t{\r\n\t\t\t// Version info, top right\r\n\t\t\tbitMatrix.setRegion(dimension - 11, 0, 3, 6);\r\n\t\t\t// Version info, bottom left\r\n\t\t\tbitMatrix.setRegion(0, dimension - 11, 6, 3);\r\n\t\t}\r\n\r\n\t\treturn bitMatrix;\r\n\t}\r\n\tgetECBlocksForLevel=function( ecLevel: any)\r\n\t{\r\n\t\treturn this.ecBlocks[ecLevel.ordinal()];\r\n\t}\r\n\r\n\tstatic VERSION_DECODE_INFO = new Array(0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6, 0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78, 0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683, 0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB, 0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250, 0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B, 0x2542E, 0x26A64, 0x27541, 0x28C69);\r\n\r\n\tstatic VERSIONS = Version.buildVersions();\r\n\r\n\tstatic getVersionForNumber( versionNumber: any)\r\n\t{\r\n\t\tif (versionNumber < 1 || versionNumber > 40)\r\n\t\t{\r\n\t\t\tthrow \"ArgumentException\";\r\n\t\t}\r\n\t\treturn Version.VERSIONS[versionNumber - 1];\r\n\t}\r\n\r\n\tstatic getProvisionalVersionForDimension(dimension: any)\r\n\t{\r\n\t\tif (dimension % 4 != 1)\r\n\t\t{\r\n\t\t\tthrow \"Error getProvisionalVersionForDimension\";\r\n\t\t}\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn Version.getVersionForNumber((dimension - 17) >> 2);\r\n\t\t}\r\n\t\tcatch ( iae)\r\n\t\t{\r\n\t\t\tthrow \"Error getVersionForNumber\";\r\n\t\t}\r\n\t}\r\n\r\n\tstatic decodeVersionInformation( versionBits: any)\r\n\t{\r\n\t\tvar bestDifference = 0xffffffff;\r\n\t\tvar bestVersion = 0;\r\n\t\tfor (var i = 0; i < Version.VERSION_DECODE_INFO.length; i++)\r\n\t\t{\r\n\t\t\tvar targetVersion = Version.VERSION_DECODE_INFO[i];\r\n\t\t\t// Do the version info bits match exactly? done.\r\n\t\t\tif (targetVersion == versionBits)\r\n\t\t\t{\r\n\t\t\t\treturn this.getVersionForNumber(i + 7);\r\n\t\t\t}\r\n\t\t\t// Otherwise see if this is the closest to a real version info bit string\r\n\t\t\t// we have seen so far\r\n\t\t\tvar bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\r\n\t\t\tif (bitsDifference < bestDifference)\r\n\t\t\t{\r\n\t\t\t\tbestVersion = i + 7;\r\n\t\t\t\tbestDifference = bitsDifference;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// We can tolerate up to 3 bits of error since no two version info codewords will\r\n\t\t// differ in less than 4 bits.\r\n\t\tif (bestDifference <= 3)\r\n\t\t{\r\n\t\t\treturn this.getVersionForNumber(bestVersion);\r\n\t\t}\r\n\t\t// If we didn't find a close enough match, fail\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic buildVersions()\r\n\t{\r\n\t\treturn new Array(new Version(1, new Array(), new ECBlocks(7, new ECB(1, 19)), new ECBlocks(10, new ECB(1, 16)), new ECBlocks(13, new ECB(1, 13)), new ECBlocks(17, new ECB(1, 9))),\r\n\t\t\tnew Version(2, new Array(6, 18), new ECBlocks(10, new ECB(1, 34)), new ECBlocks(16, new ECB(1, 28)), new ECBlocks(22, new ECB(1, 22)), new ECBlocks(28, new ECB(1, 16))),\r\n\t\t\tnew Version(3, new Array(6, 22), new ECBlocks(15, new ECB(1, 55)), new ECBlocks(26, new ECB(1, 44)), new ECBlocks(18, new ECB(2, 17)), new ECBlocks(22, new ECB(2, 13))),\r\n\t\t\tnew Version(4, new Array(6, 26), new ECBlocks(20, new ECB(1, 80)), new ECBlocks(18, new ECB(2, 32)), new ECBlocks(26, new ECB(2, 24)), new ECBlocks(16, new ECB(4, 9))),\r\n\t\t\tnew Version(5, new Array(6, 30), new ECBlocks(26, new ECB(1, 108)), new ECBlocks(24, new ECB(2, 43)), new ECBlocks(18, new ECB(2, 15), new ECB(2, 16)), new ECBlocks(22, new ECB(2, 11), new ECB(2, 12))),\r\n\t\t\tnew Version(6, new Array(6, 34), new ECBlocks(18, new ECB(2, 68)), new ECBlocks(16, new ECB(4, 27)), new ECBlocks(24, new ECB(4, 19)), new ECBlocks(28, new ECB(4, 15))),\r\n\t\t\tnew Version(7, new Array(6, 22, 38), new ECBlocks(20, new ECB(2, 78)), new ECBlocks(18, new ECB(4, 31)), new ECBlocks(18, new ECB(2, 14), new ECB(4, 15)), new ECBlocks(26, new ECB(4, 13), new ECB(1, 14))),\r\n\t\t\tnew Version(8, new Array(6, 24, 42), new ECBlocks(24, new ECB(2, 97)), new ECBlocks(22, new ECB(2, 38), new ECB(2, 39)), new ECBlocks(22, new ECB(4, 18), new ECB(2, 19)), new ECBlocks(26, new ECB(4, 14), new ECB(2, 15))),\r\n\t\t\tnew Version(9, new Array(6, 26, 46), new ECBlocks(30, new ECB(2, 116)), new ECBlocks(22, new ECB(3, 36), new ECB(2, 37)), new ECBlocks(20, new ECB(4, 16), new ECB(4, 17)), new ECBlocks(24, new ECB(4, 12), new ECB(4, 13))),\r\n\t\t\tnew Version(10, new Array(6, 28, 50), new ECBlocks(18, new ECB(2, 68), new ECB(2, 69)), new ECBlocks(26, new ECB(4, 43), new ECB(1, 44)), new ECBlocks(24, new ECB(6, 19), new ECB(2, 20)), new ECBlocks(28, new ECB(6, 15), new ECB(2, 16))),\r\n\t\t\tnew Version(11, new Array(6, 30, 54), new ECBlocks(20, new ECB(4, 81)), new ECBlocks(30, new ECB(1, 50), new ECB(4, 51)), new ECBlocks(28, new ECB(4, 22), new ECB(4, 23)), new ECBlocks(24, new ECB(3, 12), new ECB(8, 13))),\r\n\t\t\tnew Version(12, new Array(6, 32, 58), new ECBlocks(24, new ECB(2, 92), new ECB(2, 93)), new ECBlocks(22, new ECB(6, 36), new ECB(2, 37)), new ECBlocks(26, new ECB(4, 20), new ECB(6, 21)), new ECBlocks(28, new ECB(7, 14), new ECB(4, 15))),\r\n\t\t\tnew Version(13, new Array(6, 34, 62), new ECBlocks(26, new ECB(4, 107)), new ECBlocks(22, new ECB(8, 37), new ECB(1, 38)), new ECBlocks(24, new ECB(8, 20), new ECB(4, 21)), new ECBlocks(22, new ECB(12, 11), new ECB(4, 12))),\r\n\t\t\tnew Version(14, new Array(6, 26, 46, 66), new ECBlocks(30, new ECB(3, 115), new ECB(1, 116)), new ECBlocks(24, new ECB(4, 40), new ECB(5, 41)), new ECBlocks(20, new ECB(11, 16), new ECB(5, 17)), new ECBlocks(24, new ECB(11, 12), new ECB(5, 13))),\r\n\t\t\tnew Version(15, new Array(6, 26, 48, 70), new ECBlocks(22, new ECB(5, 87), new ECB(1, 88)), new ECBlocks(24, new ECB(5, 41), new ECB(5, 42)), new ECBlocks(30, new ECB(5, 24), new ECB(7, 25)), new ECBlocks(24, new ECB(11, 12), new ECB(7, 13))),\r\n\t\t\tnew Version(16, new Array(6, 26, 50, 74), new ECBlocks(24, new ECB(5, 98), new ECB(1, 99)), new ECBlocks(28, new ECB(7, 45), new ECB(3, 46)), new ECBlocks(24, new ECB(15, 19), new ECB(2, 20)), new ECBlocks(30, new ECB(3, 15), new ECB(13, 16))),\r\n\t\t\tnew Version(17, new Array(6, 30, 54, 78), new ECBlocks(28, new ECB(1, 107), new ECB(5, 108)), new ECBlocks(28, new ECB(10, 46), new ECB(1, 47)), new ECBlocks(28, new ECB(1, 22), new ECB(15, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(17, 15))),\r\n\t\t\tnew Version(18, new Array(6, 30, 56, 82), new ECBlocks(30, new ECB(5, 120), new ECB(1, 121)), new ECBlocks(26, new ECB(9, 43), new ECB(4, 44)), new ECBlocks(28, new ECB(17, 22), new ECB(1, 23)), new ECBlocks(28, new ECB(2, 14), new ECB(19, 15))),\r\n\t\t\tnew Version(19, new Array(6, 30, 58, 86), new ECBlocks(28, new ECB(3, 113), new ECB(4, 114)), new ECBlocks(26, new ECB(3, 44), new ECB(11, 45)), new ECBlocks(26, new ECB(17, 21), new ECB(4, 22)), new ECBlocks(26, new ECB(9, 13), new ECB(16, 14))),\r\n\t\t\tnew Version(20, new Array(6, 34, 62, 90), new ECBlocks(28, new ECB(3, 107), new ECB(5, 108)), new ECBlocks(26, new ECB(3, 41), new ECB(13, 42)), new ECBlocks(30, new ECB(15, 24), new ECB(5, 25)), new ECBlocks(28, new ECB(15, 15), new ECB(10, 16))),\r\n\t\t\tnew Version(21, new Array(6, 28, 50, 72, 94), new ECBlocks(28, new ECB(4, 116), new ECB(4, 117)), new ECBlocks(26, new ECB(17, 42)), new ECBlocks(28, new ECB(17, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(19, 16), new ECB(6, 17))),\r\n\t\t\tnew Version(22, new Array(6, 26, 50, 74, 98), new ECBlocks(28, new ECB(2, 111), new ECB(7, 112)), new ECBlocks(28, new ECB(17, 46)), new ECBlocks(30, new ECB(7, 24), new ECB(16, 25)), new ECBlocks(24, new ECB(34, 13))),\r\n\t\t\tnew Version(23, new Array(6, 30, 54, 74, 102), new ECBlocks(30, new ECB(4, 121), new ECB(5, 122)), new ECBlocks(28, new ECB(4, 47), new ECB(14, 48)), new ECBlocks(30, new ECB(11, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(16, 15), new ECB(14, 16))),\r\n\t\t\tnew Version(24, new Array(6, 28, 54, 80, 106), new ECBlocks(30, new ECB(6, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(6, 45), new ECB(14, 46)), new ECBlocks(30, new ECB(11, 24), new ECB(16, 25)), new ECBlocks(30, new ECB(30, 16), new ECB(2, 17))),\r\n\t\t\tnew Version(25, new Array(6, 32, 58, 84, 110), new ECBlocks(26, new ECB(8, 106), new ECB(4, 107)), new ECBlocks(28, new ECB(8, 47), new ECB(13, 48)), new ECBlocks(30, new ECB(7, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(22, 15), new ECB(13, 16))),\r\n\t\t\tnew Version(26, new Array(6, 30, 58, 86, 114), new ECBlocks(28, new ECB(10, 114), new ECB(2, 115)), new ECBlocks(28, new ECB(19, 46), new ECB(4, 47)), new ECBlocks(28, new ECB(28, 22), new ECB(6, 23)), new ECBlocks(30, new ECB(33, 16), new ECB(4, 17))),\r\n\t\t\tnew Version(27, new Array(6, 34, 62, 90, 118), new ECBlocks(30, new ECB(8, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(22, 45), new ECB(3, 46)), new ECBlocks(30, new ECB(8, 23), new ECB(26, 24)), new ECBlocks(30, new ECB(12, 15), \t\tnew ECB(28, 16))),\r\n\t\t\tnew Version(28, new Array(6, 26, 50, 74, 98, 122), new ECBlocks(30, new ECB(3, 117), new ECB(10, 118)), new ECBlocks(28, new ECB(3, 45), new ECB(23, 46)), new ECBlocks(30, new ECB(4, 24), new ECB(31, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(31, 16))),\r\n\t\t\tnew Version(29, new Array(6, 30, 54, 78, 102, 126), new ECBlocks(30, new ECB(7, 116), new ECB(7, 117)), new ECBlocks(28, new ECB(21, 45), new ECB(7, 46)), new ECBlocks(30, new ECB(1, 23), new ECB(37, 24)), new ECBlocks(30, new ECB(19, 15), new ECB(26, 16))),\r\n\t\t\tnew Version(30, new Array(6, 26, 52, 78, 104, 130), new ECBlocks(30, new ECB(5, 115), new ECB(10, 116)), new ECBlocks(28, new ECB(19, 47), new ECB(10, 48)), new ECBlocks(30, new ECB(15, 24), new ECB(25, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(25, 16))),\r\n\t\t\tnew Version(31, new Array(6, 30, 56, 82, 108, 134), new ECBlocks(30, new ECB(13, 115), new ECB(3, 116)), new ECBlocks(28, new ECB(2, 46), new ECB(29, 47)), new ECBlocks(30, new ECB(42, 24), new ECB(1, 25)), new ECBlocks(30, new ECB(23, 15), new ECB(28, 16))),\r\n\t\t\tnew Version(32, new Array(6, 34, 60, 86, 112, 138), new ECBlocks(30, new ECB(17, 115)), new ECBlocks(28, new ECB(10, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(10, 24), new ECB(35, 25)), new ECBlocks(30, new ECB(19, 15), new ECB(35, 16))),\r\n\t\t\tnew Version(33, new Array(6, 30, 58, 86, 114, 142), new ECBlocks(30, new ECB(17, 115), new ECB(1, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(21, 47)), new ECBlocks(30, new ECB(29, 24), new ECB(19, 25)), new ECBlocks(30, new ECB(11, 15), new ECB(46, 16))),\r\n\t\t\tnew Version(34, new Array(6, 34, 62, 90, 118, 146), new ECBlocks(30, new ECB(13, 115), new ECB(6, 116)), new ECBlocks(28, new ECB(14, 46), new ECB(23, 47)), new ECBlocks(30, new ECB(44, 24), new ECB(7, 25)), new ECBlocks(30, new ECB(59, 16), new ECB(1, 17))),\r\n\t\t\tnew Version(35, new Array(6, 30, 54, 78, 102, 126, 150), new ECBlocks(30, new ECB(12, 121), new ECB(7, 122)), new ECBlocks(28, new ECB(12, 47), new ECB(26, 48)), new ECBlocks(30, new ECB(39, 24), new ECB(14, 25)),new ECBlocks(30, new ECB(22, 15), new ECB(41, 16))),\r\n\t\t\tnew Version(36, new Array(6, 24, 50, 76, 102, 128, 154), new ECBlocks(30, new ECB(6, 121), new ECB(14, 122)), new ECBlocks(28, new ECB(6, 47), new ECB(34, 48)), new ECBlocks(30, new ECB(46, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(2, 15), new ECB(64, 16))),\r\n\t\t\tnew Version(37, new Array(6, 28, 54, 80, 106, 132, 158), new ECBlocks(30, new ECB(17, 122), new ECB(4, 123)), new ECBlocks(28, new ECB(29, 46), new ECB(14, 47)), new ECBlocks(30, new ECB(49, 24), new ECB(10, 25)), new ECBlocks(30, new ECB(24, 15), new ECB(46, 16))),\r\n\t\t\tnew Version(38, new Array(6, 32, 58, 84, 110, 136, 162), new ECBlocks(30, new ECB(4, 122), new ECB(18, 123)), new ECBlocks(28, new ECB(13, 46), new ECB(32, 47)), new ECBlocks(30, new ECB(48, 24), new ECB(14, 25)), new ECBlocks(30, new ECB(42, 15), new ECB(32, 16))),\r\n\t\t\tnew Version(39, new Array(6, 26, 54, 82, 110, 138, 166), new ECBlocks(30, new ECB(20, 117), new ECB(4, 118)), new ECBlocks(28, new ECB(40, 47), new ECB(7, 48)), new ECBlocks(30, new ECB(43, 24), new ECB(22, 25)), new ECBlocks(30, new ECB(10, 15), new ECB(67, 16))),\r\n\t\t\tnew Version(40, new Array(6, 30, 58, 86, 114, 142, 170), new ECBlocks(30, new ECB(19, 118), new ECB(6, 119)), new ECBlocks(28, new ECB(18, 47), new ECB(31, 48)), new ECBlocks(30, new ECB(34, 24), new ECB(34, 25)), new ECBlocks(30, new ECB(20, 15), new ECB(61, 16))));\r\n\t}\r\n}\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\ndeclare global{\r\n\tinterface Array<T>{\r\n\t\tremove(from:T):T[];\r\n\t}\r\n}\r\n\r\nif(!Array.prototype.remove){\r\n\tArray.prototype.remove = function<T> (from:any )\r\n\t{\r\n\t\tvar rest = this.slice((from) + 1 || this.length);\r\n\t\tthis.length = from < 0 ? this.length + from : from;\r\n\t\treturn this.push.apply(this, rest);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport class FinderPattern{\r\n\tstatic MIN_SKIP = 3;\r\n\tstatic MAX_MODULES = 57;\r\n\tstatic INTEGER_MATH_SHIFT = 8;\r\n\tstatic CENTER_QUORUM = 2;\r\n\r\n\tx: any;\r\n\ty: any;\r\n\tcount: any;\r\n\testimatedModuleSize: any;\r\n\r\n\r\n\tconstructor(posX: any, posY: any,  estimatedModuleSize: any){\r\n\t\tthis.x=posX;\r\n\t\tthis.y=posY;\r\n\t\tthis.count = 1;\r\n\t\tthis.estimatedModuleSize = estimatedModuleSize;\r\n\t}\r\n\r\n\tget EstimatedModuleSize()\r\n\t{\r\n\t\treturn this.estimatedModuleSize;\r\n\t};\r\n\tget Count()\r\n\t{\r\n\t\treturn this.count;\r\n\t};\r\n\tget X()\r\n\t{\r\n\t\treturn this.x;\r\n\t};\r\n\tget Y()\r\n\t{\r\n\t\treturn this.y;\r\n\t};\r\n\tincrementCount = function()\r\n\t{\r\n\t\tthis.count++;\r\n\t}\r\n\taboutEquals=function( moduleSize: any,  i:any ,  j:any)\r\n\t{\r\n\t\tif (Math.abs(i - this.y) <= moduleSize && Math.abs(j - this.x) <= moduleSize)\r\n\t\t{\r\n\t\t\tvar moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\r\n\t\t\treturn moduleSizeDiff <= 1.0 || moduleSizeDiff / this.estimatedModuleSize <= 1.0;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport class FinderPatternInfo{\r\n\tbottomLeft: any;\r\n\ttopLeft: any;\r\n\ttopRight: any;\r\n\tconstructor(patternCenters: any){\r\n\t\tthis.bottomLeft = patternCenters[0];\r\n\t\tthis.topLeft = patternCenters[1];\r\n\t\tthis.topRight = patternCenters[2];\r\n\t}\r\n\tget BottomLeft()\r\n\t{\r\n\t\treturn this.bottomLeft;\r\n\t};\r\n\tget TopLeft()\r\n\t{\r\n\t\treturn this.topLeft;\r\n\t};\r\n\tget TopRight()\r\n\t{\r\n\t\treturn this.topRight;\r\n\t};\r\n}\r\n\r\nexport class FinderPatternFinder{\r\n\r\n\twidth:any;\r\n\theight:any;\r\n\timage:any;\r\n\tpossibleCenters: any[] = new Array<FinderPattern>();\r\n\thasSkipped = false;\r\n\tcrossCheckStateCount = new Array(0,0,0,0,0);\r\n\tresultPointCallback:any;\r\n\r\n\tconstructor(width: any, height: any){\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\tget CrossCheckStateCount()\r\n\t{\r\n\t\tthis.crossCheckStateCount[0] = 0;\r\n\t\tthis.crossCheckStateCount[1] = 0;\r\n\t\tthis.crossCheckStateCount[2] = 0;\r\n\t\tthis.crossCheckStateCount[3] = 0;\r\n\t\tthis.crossCheckStateCount[4] = 0;\r\n\t\treturn this.crossCheckStateCount;\r\n\t};\r\n\r\n\torderBestPatterns=function(patterns:any )\r\n\t{\r\n\r\n\t\tfunction distance( pattern1: any,  pattern2: any)\r\n\t\t{\r\n\t\t\tlet xDiff = pattern1.X - pattern2.X;\r\n\t\t\tlet yDiff = pattern1.Y - pattern2.Y;\r\n\t\t\treturn  Math.sqrt( (xDiff * xDiff + yDiff * yDiff));\r\n\t\t}\r\n\r\n\t\t/// <summary> Returns the z component of the cross product between vectors BC and BA.</summary>\r\n\t\tfunction crossProductZ( pointA: any,  pointB: any,  pointC: any)\r\n\t\t{\r\n\t\t\tvar bX = pointB.x;\r\n\t\t\tvar bY = pointB.y;\r\n\t\t\treturn ((pointC.x - bX) * (pointA.y - bY)) - ((pointC.y - bY) * (pointA.x - bX));\r\n\t\t}\r\n\r\n\r\n\t\t// Find distances between pattern centers\r\n\t\tvar zeroOneDistance = distance(patterns[0], patterns[1]);\r\n\t\tvar oneTwoDistance = distance(patterns[1], patterns[2]);\r\n\t\tvar zeroTwoDistance = distance(patterns[0], patterns[2]);\r\n\r\n\t\tvar pointA: any, pointB: any, pointC: any;\r\n\t\t// Assume one closest to other two is B; A and C will just be guesses at first\r\n\t\tif (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance)\r\n\t\t{\r\n\t\t\tpointB = patterns[0];\r\n\t\t\tpointA = patterns[1];\r\n\t\t\tpointC = patterns[2];\r\n\t\t}\r\n\t\telse if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance)\r\n\t\t{\r\n\t\t\tpointB = patterns[1];\r\n\t\t\tpointA = patterns[0];\r\n\t\t\tpointC = patterns[2];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpointB = patterns[2];\r\n\t\t\tpointA = patterns[0];\r\n\t\t\tpointC = patterns[1];\r\n\t\t}\r\n\r\n\t\t// Use cross product to figure out whether A and C are correct or flipped.\r\n\t\t// This asks whether BC x BA has a positive z component, which is the arrangement\r\n\t\t// we want for A, B, C. If it's negative, then we've got it flipped around and\r\n\t\t// should swap A and C.\r\n\t\tif (crossProductZ(pointA, pointB, pointC) < 0.0)\r\n\t\t{\r\n\t\t\tvar temp = pointA;\r\n\t\t\tpointA = pointC;\r\n\t\t\tpointC = temp;\r\n\t\t}\r\n\r\n\t\tpatterns[0] = pointA;\r\n\t\tpatterns[1] = pointB;\r\n\t\tpatterns[2] = pointC;\r\n\t}\r\n\r\n\tfoundPatternCross=function( stateCount: any)\r\n\t{\r\n\t\tvar totalModuleSize = 0;\r\n\t\tfor (var i = 0; i < 5; i++)\r\n\t\t{\r\n\t\t\tvar count = stateCount[i];\r\n\t\t\tif (count == 0)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttotalModuleSize += count;\r\n\t\t}\r\n\t\tif (totalModuleSize < 7)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar moduleSize = Math.floor((totalModuleSize << FinderPattern.INTEGER_MATH_SHIFT) / 7);\r\n\t\tvar maxVariance = Math.floor(moduleSize / 2);\r\n\t\t// Allow less than 50% variance from 1-1-3-1-1 proportions\r\n\t\treturn Math.abs(moduleSize - (stateCount[0]\r\n\t\t\t\t<< FinderPattern.INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(moduleSize - (stateCount[1]\r\n\t\t\t\t<< FinderPattern.INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(3 * moduleSize - (stateCount[2]\r\n\t\t\t\t<< FinderPattern.INTEGER_MATH_SHIFT)) < 3 * maxVariance && Math.abs(moduleSize - (stateCount[3]\r\n\t\t\t\t<< FinderPattern.INTEGER_MATH_SHIFT)) < maxVariance && Math.abs(moduleSize - (stateCount[4]\r\n\t\t\t\t<< FinderPattern.INTEGER_MATH_SHIFT)) < maxVariance;\r\n\t}\r\n\r\n\tcenterFromEnd=function( stateCount: any,  end: any)\r\n\t{\r\n\t\treturn  (end - stateCount[4] - stateCount[3]) - stateCount[2] / 2.0;\r\n\t}\r\n\r\n\tcrossCheckVertical=function( startI: any,  centerJ: any,  maxCount: any,  originalStateCountTotal: any)\r\n\t{\r\n\t\tvar image = this.image;\r\n\r\n\t\tvar maxI = this.height;\r\n\t\tvar stateCount = this.CrossCheckStateCount;\r\n\r\n\t\t// Start counting up from center\r\n\t\tvar i = startI;\r\n\t\twhile (i >= 0 && image[centerJ + i*this.width])\r\n\t\t{\r\n\t\t\tstateCount[2]++;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\tif (i < 0)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i >= 0 && !image[centerJ +i*this.width] && stateCount[1] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[1]++;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\t// If already too many modules in this state or ran off the edge:\r\n\t\tif (i < 0 || stateCount[1] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i >= 0 && image[centerJ + i*this.width] && stateCount[0] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[0]++;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\tif (stateCount[0] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\t// Now also count down from center\r\n\t\ti = startI + 1;\r\n\t\twhile (i < maxI && image[centerJ +i*this.width])\r\n\t\t{\r\n\t\t\tstateCount[2]++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (i == maxI)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i < maxI && !image[centerJ + i*this.width] && stateCount[3] < maxCount)\r\n\t\t{\r\n\t\t\tstateCount[3]++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (i == maxI || stateCount[3] >= maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (i < maxI && image[centerJ + i*this.width] && stateCount[4] < maxCount)\r\n\t\t{\r\n\t\t\tstateCount[4]++;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (stateCount[4] >= maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\t// If we found a finder-pattern-like section, but its size is more than 40% different than\r\n\t\t// the original, assume it's a false positive\r\n\t\tvar stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\r\n\t\tif (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\treturn this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount, i):NaN;\r\n\t}\r\n\r\n\tcrossCheckHorizontal=function( startJ: any,  centerI: any,  maxCount: any, originalStateCountTotal: any)\r\n\t{\r\n\t\tvar image = this.image;\r\n\r\n\t\tvar maxJ = this.width;\r\n\t\tvar stateCount = this.CrossCheckStateCount;\r\n\r\n\t\tvar j = startJ;\r\n\t\twhile (j >= 0 && image[j+ centerI*this.width])\r\n\t\t{\r\n\t\t\tstateCount[2]++;\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tif (j < 0)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (j >= 0 && !image[j+ centerI*this.width] && stateCount[1] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[1]++;\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tif (j < 0 || stateCount[1] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (j >= 0 && image[j+ centerI*this.width] && stateCount[0] <= maxCount)\r\n\t\t{\r\n\t\t\tstateCount[0]++;\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tif (stateCount[0] > maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\tj = startJ + 1;\r\n\t\twhile (j < maxJ && image[j+ centerI*this.width])\r\n\t\t{\r\n\t\t\tstateCount[2]++;\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif (j == maxJ)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (j < maxJ && !image[j+ centerI*this.width] && stateCount[3] < maxCount)\r\n\t\t{\r\n\t\t\tstateCount[3]++;\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif (j == maxJ || stateCount[3] >= maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\t\twhile (j < maxJ && image[j+ centerI*this.width] && stateCount[4] < maxCount)\r\n\t\t{\r\n\t\t\tstateCount[4]++;\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif (stateCount[4] >= maxCount)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\t// If we found a finder-pattern-like section, but its size is significantly different than\r\n\t\t// the original, assume it's a false positive\r\n\t\tvar stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\r\n\t\tif (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal)\r\n\t\t{\r\n\t\t\treturn NaN;\r\n\t\t}\r\n\r\n\t\treturn this.foundPatternCross(stateCount)?this.centerFromEnd(stateCount, j):NaN;\r\n\t}\r\n\thandlePossibleCenter=function( stateCount: any,  i: any,  j: any)\r\n{\r\n\tvar stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\r\n\tvar centerJ = this.centerFromEnd(stateCount, j); //float\r\n\tvar centerI = this.crossCheckVertical(i, Math.floor( centerJ), stateCount[2], stateCountTotal); //float\r\n\tif (!isNaN(centerI))\r\n\t{\r\n\t\t// Re-cross check\r\n\t\tcenterJ = this.crossCheckHorizontal(Math.floor( centerJ), Math.floor( centerI), stateCount[2], stateCountTotal);\r\n\t\tif (!isNaN(centerJ))\r\n\t\t{\r\n\t\t\tvar estimatedModuleSize =   stateCountTotal / 7.0;\r\n\t\t\tvar found = false;\r\n\t\t\tvar max = this.possibleCenters.length;\r\n\t\t\tfor (var index = 0; index < max; index++)\r\n\t\t\t{\r\n\t\t\t\tvar center = this.possibleCenters[index];\r\n\t\t\t\t// Look for about the same center and module size:\r\n\t\t\t\tif (center.aboutEquals(estimatedModuleSize, centerI, centerJ))\r\n\t\t\t\t{\r\n\t\t\t\t\tcenter.incrementCount();\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!found)\r\n\t\t\t{\r\n\t\t\t\tvar point = new FinderPattern(centerJ, centerI, estimatedModuleSize);\r\n\t\t\t\tthis.possibleCenters.push(point);\r\n\t\t\t\tif (this.resultPointCallback != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.resultPointCallback.foundPossibleResultPoint(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tselectBestPatterns=function()\r\n\t{\r\n\r\n\t\tvar startSize = this.possibleCenters.length;\r\n\t\tif (startSize < 3)\r\n\t\t{\r\n\t\t\t// Couldn't find enough finder patterns\r\n\t\t\tthrow `Couldn't find enough finder patterns (found: ${startSize})`;\r\n\t\t}\r\n\r\n\t\t// Filter outlier possibilities whose module size is too different\r\n\t\tif (startSize > 3)\r\n\t\t{\r\n\t\t\t// But we can only afford to do so if we have at least 4 possibilities to choose from\r\n\t\t\tvar totalModuleSize = 0.0;\r\n\t\t\tvar square = 0.0;\r\n\t\t\tfor (var i = 0; i < startSize; i++)\r\n\t\t\t{\r\n\t\t\t\t//totalModuleSize +=  this.possibleCenters[i].EstimatedModuleSize;\r\n\t\t\t\tvar\tcenterValue=this.possibleCenters[i].EstimatedModuleSize;\r\n\t\t\t\ttotalModuleSize += centerValue;\r\n\t\t\t\tsquare += (centerValue * centerValue);\r\n\t\t\t}\r\n\t\t\tvar average = totalModuleSize /  startSize;\r\n\t\t\tthis.possibleCenters.sort(function(center1: any,center2: any) {\r\n\t\t\t\tvar dA=Math.abs(center2.EstimatedModuleSize - average);\r\n\t\t\t\tvar dB=Math.abs(center1.EstimatedModuleSize - average);\r\n\t\t\t\tif (dA < dB) {\r\n\t\t\t\t\treturn (-1);\r\n\t\t\t\t} else if (dA == dB) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar stdDev = Math.sqrt(square / startSize - average * average);\r\n\t\t\tvar limit = Math.max(0.2 * average, stdDev);\r\n\t\t\tfor (var i = this.possibleCenters.length - 1; i >= 0 ; i--)\r\n\t\t\t{\r\n\t\t\t\tvar pattern =  this.possibleCenters[i];\r\n\t\t\t\t//if (Math.abs(pattern.EstimatedModuleSize - average) > 0.2 * average)\r\n\t\t\t\tif (Math.abs(pattern.EstimatedModuleSize - average) > limit)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.possibleCenters.remove(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.possibleCenters.length > 3)\r\n\t\t{\r\n\t\t\t// Throw away all but those first size candidate points we found.\r\n\t\t\tthis.possibleCenters.sort(function(a: any, b: any){\r\n\t\t\t\tif (a.count > b.count){return -1;}\r\n\t\t\t\tif (a.count < b.count){return 1;}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn new Array( this.possibleCenters[0],  this.possibleCenters[1],  this.possibleCenters[2]);\r\n\t}\r\n\r\n\tfindRowSkip=function()\r\n\t{\r\n\t\tvar max = this.possibleCenters.length;\r\n\t\tif (max <= 1)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tvar firstConfirmedCenter: any = null;\r\n\t\tfor (var i = 0; i < max; i++)\r\n\t\t{\r\n\t\t\tvar center =  this.possibleCenters[i];\r\n\t\t\tif (center.Count >= FinderPattern.CENTER_QUORUM)\r\n\t\t\t{\r\n\t\t\t\tif (firstConfirmedCenter == null)\r\n\t\t\t\t{\r\n\t\t\t\t\tfirstConfirmedCenter = center;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// We have two confirmed centers\r\n\t\t\t\t\t// How far down can we skip before resuming looking for the next\r\n\t\t\t\t\t// pattern? In the worst case, only the difference between the\r\n\t\t\t\t\t// difference in the x / y coordinates of the two centers.\r\n\t\t\t\t\t// This is the case where you find top left last.\r\n\t\t\t\t\tthis.hasSkipped = true;\r\n\t\t\t\t\treturn Math.floor ((Math.abs(firstConfirmedCenter.X - center.X) - Math.abs(firstConfirmedCenter.Y - center.Y)) / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\thaveMultiplyConfirmedCenters=function()\r\n\t{\r\n\t\tvar confirmedCount = 0;\r\n\t\tvar totalModuleSize = 0.0;\r\n\t\tvar max = this.possibleCenters.length;\r\n\t\tfor (var i = 0; i < max; i++)\r\n\t\t{\r\n\t\t\tvar pattern =  this.possibleCenters[i];\r\n\t\t\tif (pattern.Count >= FinderPattern.CENTER_QUORUM)\r\n\t\t\t{\r\n\t\t\t\tconfirmedCount++;\r\n\t\t\t\ttotalModuleSize += pattern.EstimatedModuleSize;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (confirmedCount < 3)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// OK, we have at least 3 confirmed centers, but, it's possible that one is a \"false positive\"\r\n\t\t// and that we need to keep looking. We detect this by asking if the estimated module sizes\r\n\t\t// vary too much. We arbitrarily say that when the total deviation from average exceeds\r\n\t\t// 5% of the total module size estimates, it's too much.\r\n\t\tvar average = totalModuleSize / max;\r\n\t\tvar totalDeviation = 0.0;\r\n\t\tfor (var i = 0; i < max; i++)\r\n\t\t{\r\n\t\t\tpattern = this.possibleCenters[i];\r\n\t\t\ttotalDeviation += Math.abs(pattern.EstimatedModuleSize - average);\r\n\t\t}\r\n\t\treturn totalDeviation <= 0.05 * totalModuleSize;\r\n\t}\r\n\r\n\tfindFinderPattern = function(image: any)\r\n\t{\r\n\t\tvar tryHarder = false;\r\n\t\tthis.image=image;\r\n\t\tvar maxI = this.height;\r\n\t\tvar maxJ = this.width;\r\n\t\tvar iSkip = Math.floor((3 * maxI) / (4 * FinderPattern.MAX_MODULES));\r\n\t\tif (iSkip < FinderPattern.MIN_SKIP || tryHarder)\r\n\t\t{\r\n\t\t\tiSkip = FinderPattern.MIN_SKIP;\r\n\t\t}\r\n\r\n\t\tvar done = false;\r\n\t\tvar stateCount = new Array(5);\r\n\t\tfor (var i = iSkip - 1; i < maxI && !done; i += iSkip)\r\n\t\t{\r\n\t\t\t// Get a row of black/white values\r\n\t\t\tstateCount[0] = 0;\r\n\t\t\tstateCount[1] = 0;\r\n\t\t\tstateCount[2] = 0;\r\n\t\t\tstateCount[3] = 0;\r\n\t\t\tstateCount[4] = 0;\r\n\t\t\tvar currentState = 0;\r\n\t\t\tfor (var j = 0; j < maxJ; j++)\r\n\t\t\t{\r\n\t\t\t\tif (image[j+i*this.width] )\r\n\t\t\t\t{\r\n\t\t\t\t\t// Black pixel\r\n\t\t\t\t\tif ((currentState & 1) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting white pixels\r\n\t\t\t\t\t\tcurrentState++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstateCount[currentState]++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// White pixel\r\n\t\t\t\t\tif ((currentState & 1) == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting black pixels\r\n\t\t\t\t\t\tif (currentState == 4)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// A winner?\r\n\t\t\t\t\t\t\tif (this.foundPatternCross(stateCount))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Yes\r\n\t\t\t\t\t\t\t\tvar confirmed = this.handlePossibleCenter(stateCount, i, j);\r\n\t\t\t\t\t\t\t\tif (confirmed)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t// Start examining every other line. Checking each line turned out to be too\r\n\t\t\t\t\t\t\t\t\t// expensive and didn't improve performance.\r\n\t\t\t\t\t\t\t\t\tiSkip = 2;\r\n\t\t\t\t\t\t\t\t\tif (this.hasSkipped)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdone = this.haveMultiplyConfirmedCenters();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tvar rowSkip = this.findRowSkip();\r\n\t\t\t\t\t\t\t\t\t\tif (rowSkip > stateCount[2])\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t// Skip rows between row of lower confirmed center\r\n\t\t\t\t\t\t\t\t\t\t\t// and top of presumed third confirmed center\r\n\t\t\t\t\t\t\t\t\t\t\t// but back up a bit to get a full chance of detecting\r\n\t\t\t\t\t\t\t\t\t\t\t// it, entire width of center of finder pattern\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Skip by rowSkip, but back off by stateCount[2] (size of last center\r\n\t\t\t\t\t\t\t\t\t\t\t// of pattern we saw) to be conservative, and also back off by iSkip which\r\n\t\t\t\t\t\t\t\t\t\t\t// is about to be re-added\r\n\t\t\t\t\t\t\t\t\t\t\ti += rowSkip - stateCount[2] - iSkip;\r\n\t\t\t\t\t\t\t\t\t\t\tj = maxJ - 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t// Advance to next black pixel\r\n\t\t\t\t\t\t\t\t\tdo\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\twhile (j < maxJ && !image[j + i*this.width]);\r\n\t\t\t\t\t\t\t\t\tj--; // back up to that last white pixel\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Clear state to start looking again\r\n\t\t\t\t\t\t\t\tcurrentState = 0;\r\n\t\t\t\t\t\t\t\tstateCount[0] = 0;\r\n\t\t\t\t\t\t\t\tstateCount[1] = 0;\r\n\t\t\t\t\t\t\t\tstateCount[2] = 0;\r\n\t\t\t\t\t\t\t\tstateCount[3] = 0;\r\n\t\t\t\t\t\t\t\tstateCount[4] = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// No, shift counts back by two\r\n\t\t\t\t\t\t\t\tstateCount[0] = stateCount[2];\r\n\t\t\t\t\t\t\t\tstateCount[1] = stateCount[3];\r\n\t\t\t\t\t\t\t\tstateCount[2] = stateCount[4];\r\n\t\t\t\t\t\t\t\tstateCount[3] = 1;\r\n\t\t\t\t\t\t\t\tstateCount[4] = 0;\r\n\t\t\t\t\t\t\t\tcurrentState = 3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstateCount[++currentState]++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Counting white pixels\r\n\t\t\t\t\t\tstateCount[currentState]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.foundPatternCross(stateCount))\r\n\t\t\t{\r\n\t\t\t\tvar confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\r\n\t\t\t\tif (confirmed)\r\n\t\t\t\t{\r\n\t\t\t\t\tiSkip = stateCount[0];\r\n\t\t\t\t\tif (this.hasSkipped)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Found a third one\r\n\t\t\t\t\t\tdone = this.haveMultiplyConfirmedCenters();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar patternInfo = this.selectBestPatterns();\r\n\t\tthis.orderBestPatterns(patternInfo);\r\n\r\n\t\treturn new FinderPatternInfo(patternInfo);\r\n\t};\r\n}\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011\r\n\r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n\r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\nimport {AlignmentPatternFinder} from \"./alignpat\";\r\nimport {GridSampler} from \"./grid\";\r\nimport {Version} from \"./version\"\r\nimport {FinderPatternFinder} from \"./findpat\";\r\nimport {PerspectiveTransform} from \"./perpesctivetransform\";\r\n\r\n\r\n\r\nexport class DetectorResult{\r\n\tbits:any;\r\n\tpoints:any;\r\n\r\n\tconstructor(bits:any,  points:any){\r\n\t\tthis.bits = bits;\r\n\t\tthis.points = points;\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport class Detector {\r\n\timage: any;\r\n\trawImage: any;\r\n\twidth: number;\r\n\theight: number;\r\n\tconstructor(image: any, rawImage:any, width: number, height: number){\r\n\t\tthis.image = image;\r\n\t\tthis.rawImage = rawImage;\r\n\t\tthis.height = height;\r\n\t\tthis.width = width;\r\n\t}\r\n\r\n\tsizeOfBlackWhiteBlackRun( fromX:any,  fromY:any,  toX:any,  toY:any):number\r\n\t{\r\n\t\t// Mild variant of Bresenham's algorithm;\r\n\t\t// see http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\r\n\t\tvar steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\r\n\t\tif (steep)\r\n\t\t{\r\n\t\t\tvar temp = fromX;\r\n\t\t\tfromX = fromY;\r\n\t\t\tfromY = temp;\r\n\t\t\ttemp = toX;\r\n\t\t\ttoX = toY;\r\n\t\t\ttoY = temp;\r\n\t\t}\r\n\r\n\t\tvar dx = Math.abs(toX - fromX);\r\n\t\tvar dy = Math.abs(toY - fromY);\r\n\t\tvar error = - dx >> 1;\r\n\t\tvar ystep = fromY < toY?1:- 1;\r\n\t\tvar xstep = fromX < toX?1:- 1;\r\n\t\tvar state = 0; // In black pixels, looking for white, first or second time\r\n\t\tfor (var x = fromX, y = fromY; x != toX; x += xstep)\r\n\t\t{\r\n\r\n\t\t\tvar realX = steep?y:x;\r\n\t\t\tvar realY = steep?x:y;\r\n\t\t\tif (state == 1)\r\n\t\t\t{\r\n\t\t\t\t// In white pixels, looking for black\r\n\t\t\t\tif (this.image[realX + realY*this.width])\r\n\t\t\t\t{\r\n\t\t\t\t\tstate++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (!this.image[realX + realY*this.width])\r\n\t\t\t\t{\r\n\t\t\t\t\tstate++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (state == 3)\r\n\t\t\t{\r\n\t\t\t\t// Found black, white, black, and stumbled back onto white; done\r\n\t\t\t\tvar diffX = x - fromX;\r\n\t\t\t\tvar diffY = y - fromY;\r\n\t\t\t\treturn  Math.sqrt( (diffX * diffX + diffY * diffY));\r\n\t\t\t}\r\n\t\t\terror += dy;\r\n\t\t\tif (error > 0)\r\n\t\t\t{\r\n\t\t\t\tif (y == toY)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\ty += ystep;\r\n\t\t\t\terror -= dx;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar diffX2 = toX - fromX;\r\n\t\tvar diffY2 = toY - fromY;\r\n\t\treturn  Math.sqrt( (diffX2 * diffX2 + diffY2 * diffY2));\r\n\t}\r\n\r\n\tsizeOfBlackWhiteBlackRunBothWays( fromX:any,  fromY:any,  toX:any,  toY:any): number\r\n\t{\r\n\r\n\t\tvar result = this.sizeOfBlackWhiteBlackRun(fromX, fromY, toX, toY);\r\n\r\n\t\t// Now count other way -- don't run off image though of course\r\n\t\tvar scale = 1.0;\r\n\t\tvar otherToX = fromX - (toX - fromX);\r\n\t\tif (otherToX < 0)\r\n\t\t{\r\n\t\t\tscale =  fromX /  (fromX - otherToX);\r\n\t\t\totherToX = 0;\r\n\t\t}\r\n\t\telse if (otherToX >= this.width)\r\n\t\t{\r\n\t\t\tscale =  (this.width - 1 - fromX) /  (otherToX - fromX);\r\n\t\t\totherToX = this.width - 1;\r\n\t\t}\r\n\t\tvar otherToY = Math.floor (fromY - (toY - fromY) * scale);\r\n\r\n\t\tscale = 1.0;\r\n\t\tif (otherToY < 0)\r\n\t\t{\r\n\t\t\tscale =  fromY /  (fromY - otherToY);\r\n\t\t\totherToY = 0;\r\n\t\t}\r\n\t\telse if (otherToY >= this.height)\r\n\t\t{\r\n\t\t\tscale =  (this.height - 1 - fromY) /  (otherToY - fromY);\r\n\t\t\totherToY = this.height - 1;\r\n\t\t}\r\n\t\totherToX = Math.floor (fromX + (otherToX - fromX) * scale);\r\n\r\n\t\tresult += this.sizeOfBlackWhiteBlackRun(fromX, fromY, otherToX, otherToY);\r\n\t\treturn result - 1.0; // -1 because we counted the middle pixel twice\r\n\t}\r\n\tcalculateModuleSizeOneWay=function( pattern:any,  otherPattern:any)\r\n\t{\r\n\t\tvar moduleSizeEst1 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor( pattern.X), Math.floor( pattern.Y), Math.floor( otherPattern.X), Math.floor(otherPattern.Y));\r\n\t\tvar moduleSizeEst2 = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(otherPattern.X), Math.floor(otherPattern.Y), Math.floor( pattern.X), Math.floor(pattern.Y));\r\n\t\tif (isNaN(moduleSizeEst1))\r\n\t\t{\r\n\t\t\treturn moduleSizeEst2 / 7.0;\r\n\t\t}\r\n\t\tif (isNaN(moduleSizeEst2))\r\n\t\t{\r\n\t\t\treturn moduleSizeEst1 / 7.0;\r\n\t\t}\r\n\t\t// Average them, and divide by 7 since we've counted the width of 3 black modules,\r\n\t\t// and 1 white and 1 black module on either side. Ergo, divide sum by 14.\r\n\t\treturn (moduleSizeEst1 + moduleSizeEst2) / 14.0;\r\n\t}\r\n\tcalculateModuleSize=function( topLeft:any,  topRight:any,  bottomLeft:any)\r\n\t{\r\n\t\t// Take the average\r\n\t\treturn (this.calculateModuleSizeOneWay(topLeft, topRight) + this.calculateModuleSizeOneWay(topLeft, bottomLeft)) / 2.0;\r\n\t}\r\n\tdistance=function( pattern1:any,  pattern2:any)\r\n\t{\r\n\t\tlet xDiff = pattern1.X - pattern2.X;\r\n\t\tlet yDiff = pattern1.Y - pattern2.Y;\r\n\t\treturn  Math.sqrt( (xDiff * xDiff + yDiff * yDiff));\r\n\t}\r\n\tcomputeDimension=function( topLeft:any,  topRight:any,  bottomLeft:any,  moduleSize:any)\r\n\t{\r\n\r\n\t\tvar tltrCentersDimension = Math.round(this.distance(topLeft, topRight) / moduleSize);\r\n\t\tvar tlblCentersDimension = Math.round(this.distance(topLeft, bottomLeft) / moduleSize);\r\n\t\tvar dimension = ((tltrCentersDimension + tlblCentersDimension) >> 1) + 7;\r\n\t\tswitch (dimension & 0x03)\r\n\t\t{\r\n\r\n\t\t\t// mod 4\r\n\t\t\tcase 0:\r\n\t\t\t\tdimension++;\r\n\t\t\t\tbreak;\r\n\t\t\t// 1? do nothing\r\n\r\n\t\t\tcase 2:\r\n\t\t\t\tdimension--;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 3:\r\n\t\t\t\tthrow \"Error\";\r\n\t\t}\r\n\t\treturn dimension;\r\n\t}\r\n\tfindAlignmentInRegion=function( overallEstModuleSize:any,  estAlignmentX:any,  estAlignmentY:any,  allowanceFactor:any)\r\n\t{\r\n\t\t// Look for an alignment pattern (3 modules in size) around where it\r\n\t\t// should be\r\n\t\tvar allowance = Math.floor (allowanceFactor * overallEstModuleSize);\r\n\t\tvar alignmentAreaLeftX = Math.max(0, estAlignmentX - allowance);\r\n\t\tvar alignmentAreaRightX = Math.min(this.width - 1, estAlignmentX + allowance);\r\n\t\tif (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3)\r\n\t\t{\r\n\t\t\tthrow \"Error\";\r\n\t\t}\r\n\r\n\t\tvar alignmentAreaTopY = Math.max(0, estAlignmentY - allowance);\r\n\t\tvar alignmentAreaBottomY = Math.min(this.height - 1, estAlignmentY + allowance);\r\n\r\n\t\tvar alignmentFinder = new AlignmentPatternFinder(this.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize, this.width,this.height, this.resultPointCallback);\r\n\t\treturn alignmentFinder.find();\r\n\t}\r\n\r\n\tcreateTransform=function( topLeft:any,  topRight:any,  bottomLeft:any, alignmentPattern:any, dimension:any)\r\n\t{\r\n\t\tvar dimMinusThree =  dimension - 3.5;\r\n\t\tvar bottomRightX:any;\r\n\t\tvar bottomRightY:any;\r\n\t\tvar sourceBottomRightX:any;\r\n\t\tvar sourceBottomRightY:any;\r\n\t\tif (alignmentPattern != null)\r\n\t\t{\r\n\t\t\tbottomRightX = alignmentPattern.X;\r\n\t\t\tbottomRightY = alignmentPattern.Y;\r\n\t\t\tsourceBottomRightX = sourceBottomRightY = dimMinusThree - 3.0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Don't have an alignment pattern, just make up the bottom-right point\r\n\t\t\tbottomRightX = (topRight.X - topLeft.X) + bottomLeft.X;\r\n\t\t\tbottomRightY = (topRight.Y - topLeft.Y) + bottomLeft.Y;\r\n\t\t\tsourceBottomRightX = sourceBottomRightY = dimMinusThree;\r\n\t\t}\r\n\r\n\t\tvar transform = PerspectiveTransform.quadrilateralToQuadrilateral(3.5, 3.5, dimMinusThree, 3.5, sourceBottomRightX, sourceBottomRightY, 3.5, dimMinusThree, topLeft.X, topLeft.Y, topRight.X, topRight.Y, bottomRightX, bottomRightY, bottomLeft.X, bottomLeft.Y);\r\n\r\n\t\treturn transform;\r\n\t}\r\n\tsampleGrid=function( image:any,  transform:any,  dimension:any)\r\n\t{\r\n\r\n\t\tvar sampler = new GridSampler(this.width,this.height);\r\n\t\treturn sampler.sampleGrid3(image,this.rawImage, dimension, transform);\r\n\t}\r\n\tprocessFinderPatternInfo( info:any):any\r\n\t{\r\n\r\n\t\tvar topLeft = info.TopLeft;\r\n\t\tvar topRight = info.TopRight;\r\n\t\tvar bottomLeft = info.BottomLeft;\r\n\r\n\t\tvar moduleSize = this.calculateModuleSize(topLeft, topRight, bottomLeft);\r\n\t\tif (moduleSize < 1.0)\r\n\t\t{\r\n\t\t\tthrow \"Error\";\r\n\t\t}\r\n\t\tvar dimension = this.computeDimension(topLeft, topRight, bottomLeft, moduleSize);\r\n\t\tvar provisionalVersion = Version.getProvisionalVersionForDimension(dimension);\r\n\t\tvar modulesBetweenFPCenters = provisionalVersion.DimensionForVersion - 7;\r\n\r\n\t\tvar alignmentPattern: any = null;\r\n\t\t// Anything above version 1 has an alignment pattern\r\n\t\tif (provisionalVersion.AlignmentPatternCenters.length > 0)\r\n\t\t{\r\n\r\n\t\t\t// Guess where a \"bottom right\" finder pattern would have been\r\n\t\t\tvar bottomRightX = topRight.X - topLeft.X + bottomLeft.X;\r\n\t\t\tvar bottomRightY = topRight.Y - topLeft.Y + bottomLeft.Y;\r\n\r\n\t\t\t// Estimate that alignment pattern is closer by 3 modules\r\n\t\t\t// from \"bottom right\" to known top left location\r\n\t\t\tvar correctionToTopLeft = 1.0 - 3.0 /  modulesBetweenFPCenters;\r\n\t\t\tvar estAlignmentX = Math.floor (topLeft.X + correctionToTopLeft * (bottomRightX - topLeft.X));\r\n\t\t\tvar estAlignmentY = Math.floor (topLeft.Y + correctionToTopLeft * (bottomRightY - topLeft.Y));\r\n\r\n\t\t\t// Kind of arbitrary -- expand search radius before giving up\r\n\t\t\tfor (var i = 4; i <= 16; i <<= 1)\r\n\t\t\t{\r\n\t\t\t\t//try\r\n\t\t\t\t//{\r\n\t\t\t\talignmentPattern = this.findAlignmentInRegion(moduleSize, estAlignmentX, estAlignmentY,  i);\r\n\t\t\t\tbreak;\r\n\t\t\t\t//}\r\n\t\t\t\t//catch (re)\r\n\t\t\t\t//{\r\n\t\t\t\t// try next round\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\t// If we didn't find alignment pattern... well try anyway without it\r\n\t\t}\r\n\r\n\t\tvar transform = this.createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);\r\n\r\n\t\tvar bits = this.sampleGrid(this.image, transform, dimension);\r\n\r\n\t\tvar points: any;\r\n\t\tif (alignmentPattern == null)\r\n\t\t{\r\n\t\t\tpoints = new Array(bottomLeft, topLeft, topRight);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpoints = new Array(bottomLeft, topLeft, topRight, alignmentPattern);\r\n\t\t}\r\n\t\treturn new DetectorResult(bits, points);\r\n\t}\r\n\tdetect=function()\r\n\t{\r\n\t\tvar info =  new FinderPatternFinder(this.width, this.height).findFinderPattern(this.image);\r\n\r\n\t\treturn this.processFinderPatternInfo(info);\r\n\t}\r\n}",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nexport class GF256Poly{\r\n\r\n\tfield: any;\r\n\tcoefficients: any;\r\n\tconstructor(field: any, coefficients: any){\r\n\t\tif (coefficients == null || coefficients.length == 0)\r\n\t\t{\r\n\t\t\tthrow \"System.ArgumentException\";\r\n\t\t}\r\n\t\tthis.field = field;\r\n\t\tvar coefficientsLength = coefficients.length;\r\n\t\tif (coefficientsLength > 1 && coefficients[0] == 0)\r\n\t\t{\r\n\t\t\t// Leading term must be non-zero for anything except the constant polynomial \"0\"\r\n\t\t\tvar firstNonZero = 1;\r\n\t\t\twhile (firstNonZero < coefficientsLength && coefficients[firstNonZero] == 0)\r\n\t\t\t{\r\n\t\t\t\tfirstNonZero++;\r\n\t\t\t}\r\n\t\t\tif (firstNonZero == coefficientsLength)\r\n\t\t\t{\r\n\t\t\t\tthis.coefficients = field.Zero.coefficients;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.coefficients = new Array(coefficientsLength - firstNonZero);\r\n\t\t\t\tfor(var i=0;i<this.coefficients.length;i++)this.coefficients[i]=0;\r\n\t\t\t\t//Array.Copy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\r\n\t\t\t\tfor(var ci=0;ci<this.coefficients.length;ci++)this.coefficients[ci]=coefficients[firstNonZero+ci];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.coefficients = coefficients;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget Zero(): any\r\n\t{\r\n\t\treturn this.coefficients[0] == 0;\r\n\t};\r\n\tget Degree(): any\r\n\t{\r\n\t\treturn this.coefficients.length - 1;\r\n\t};\r\n\tget Coefficients(): any\r\n\t{\r\n\t\treturn this.coefficients;\r\n\t};\r\n\r\n\tgetCoefficient( degree: any): any\r\n\t{\r\n\t\treturn this.coefficients[this.coefficients.length - 1 - degree];\r\n\t}\r\n\r\n\tevaluateAt( a: any): any\r\n\t{\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\t// Just return the x^0 coefficient\r\n\t\t\treturn this.getCoefficient(0);\r\n\t\t}\r\n\t\tvar size = this.coefficients.length;\r\n\t\tif (a == 1)\r\n\t\t{\r\n\t\t\t// Just the sum of the coefficients\r\n\t\t\tvar result = 0;\r\n\t\t\tfor (var i = 0; i < size; i++)\r\n\t\t\t{\r\n\t\t\t\tresult = GF256.addOrSubtract(result, this.coefficients[i]);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tvar result2 = this.coefficients[0];\r\n\t\tfor (var i = 1; i < size; i++)\r\n\t\t{\r\n\t\t\tresult2 = GF256.addOrSubtract(this.field.multiply(a, result2), this.coefficients[i]);\r\n\t\t}\r\n\t\treturn result2;\r\n\t}\r\n\r\n\taddOrSubtract( other: any): any\r\n\t{\r\n\t\tif (this.field != other.field)\r\n\t\t{\r\n\t\t\tthrow \"GF256Polys do not have same GF256 field\";\r\n\t\t}\r\n\t\tif (this.Zero)\r\n\t\t{\r\n\t\t\treturn other;\r\n\t\t}\r\n\t\tif (other.Zero)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar smallerCoefficients = this.coefficients;\r\n\t\tvar largerCoefficients = other.coefficients;\r\n\t\tif (smallerCoefficients.length > largerCoefficients.length)\r\n\t\t{\r\n\t\t\tvar temp = smallerCoefficients;\r\n\t\t\tsmallerCoefficients = largerCoefficients;\r\n\t\t\tlargerCoefficients = temp;\r\n\t\t}\r\n\t\tvar sumDiff = new Array(largerCoefficients.length);\r\n\t\tvar lengthDiff = largerCoefficients.length - smallerCoefficients.length;\r\n\t\t// Copy high-order terms only found in higher-degree polynomial's coefficients\r\n\t\t//Array.Copy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\r\n\t\tfor(var ci=0;ci<lengthDiff;ci++)sumDiff[ci]=largerCoefficients[ci];\r\n\r\n\t\tfor (var i = lengthDiff; i < largerCoefficients.length; i++)\r\n\t\t{\r\n\t\t\tsumDiff[i] = GF256.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\r\n\t\t}\r\n\r\n\t\treturn new GF256Poly(this.field, sumDiff);\r\n\t}\r\n\tmultiply1( other: any): any\r\n\t{\r\n\t\tif (this.field!=other.field)\r\n\t\t{\r\n\t\t\tthrow \"GF256Polys do not have same GF256 field\";\r\n\t\t}\r\n\t\tif (this.Zero || other.Zero)\r\n\t\t{\r\n\t\t\treturn this.field.Zero;\r\n\t\t}\r\n\t\tvar aCoefficients = this.coefficients;\r\n\t\tvar aLength = aCoefficients.length;\r\n\t\tvar bCoefficients = other.coefficients;\r\n\t\tvar bLength = bCoefficients.length;\r\n\t\tvar product = new Array(aLength + bLength - 1);\r\n\t\tfor (var i = 0; i < aLength; i++)\r\n\t\t{\r\n\t\t\tvar aCoeff = aCoefficients[i];\r\n\t\t\tfor (var j = 0; j < bLength; j++)\r\n\t\t\t{\r\n\t\t\t\tproduct[i + j] = GF256.addOrSubtract(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new GF256Poly(this.field, product);\r\n\t}\r\n\tmultiply2( scalar: any): any\r\n\t{\r\n\t\tif (scalar == 0)\r\n\t\t{\r\n\t\t\treturn this.field.Zero;\r\n\t\t}\r\n\t\tif (scalar == 1)\r\n\t\t{\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tvar size = this.coefficients.length;\r\n\t\tvar product = new Array(size);\r\n\t\tfor (var i = 0; i < size; i++)\r\n\t\t{\r\n\t\t\tproduct[i] = this.field.multiply(this.coefficients[i], scalar);\r\n\t\t}\r\n\t\treturn new GF256Poly(this.field, product);\r\n\t}\r\n\tmultiplyByMonomial( degree: any,  coefficient: any): any\r\n\t{\r\n\t\tif (degree < 0)\r\n\t\t{\r\n\t\t\tthrow \"System.ArgumentException\";\r\n\t\t}\r\n\t\tif (coefficient == 0)\r\n\t\t{\r\n\t\t\treturn this.field.Zero;\r\n\t\t}\r\n\t\tvar size = this.coefficients.length;\r\n\t\tvar product = new Array(size + degree);\r\n\t\tfor(var i=0;i<product.length;i++)product[i]=0;\r\n\t\tfor (var i = 0; i < size; i++)\r\n\t\t{\r\n\t\t\tproduct[i] = this.field.multiply(this.coefficients[i], coefficient);\r\n\t\t}\r\n\t\treturn new GF256Poly(this.field, product);\r\n\t}\r\n\tdivide=function( other: any): any\r\n\t{\r\n\t\tif (this.field!=other.field)\r\n\t\t{\r\n\t\t\tthrow \"GF256Polys do not have same GF256 field\";\r\n\t\t}\r\n\t\tif (other.Zero)\r\n\t\t{\r\n\t\t\tthrow \"Divide by 0\";\r\n\t\t}\r\n\r\n\t\tvar quotient = this.field.Zero;\r\n\t\tvar remainder = this;\r\n\r\n\t\tvar denominatorLeadingTerm = other.getCoefficient(other.Degree);\r\n\t\tvar inverseDenominatorLeadingTerm = this.field.inverse(denominatorLeadingTerm);\r\n\r\n\t\twhile (remainder.Degree >= other.Degree && !remainder.Zero)\r\n\t\t{\r\n\t\t\tvar degreeDifference = remainder.Degree - other.Degree;\r\n\t\t\tvar scale = this.field.multiply(remainder.getCoefficient(remainder.Degree), inverseDenominatorLeadingTerm);\r\n\t\t\tvar term = other.multiplyByMonomial(degreeDifference, scale);\r\n\t\t\tvar iterationQuotient = this.field.buildMonomial(degreeDifference, scale);\r\n\t\t\tquotient = quotient.addOrSubtract(iterationQuotient);\r\n\t\t\tremainder = remainder.addOrSubtract(term);\r\n\t\t}\r\n\r\n\t\treturn new Array(quotient, remainder);\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport class GF256{\r\n\r\n\texpTable = new Array(256);\r\n\tlogTable = new Array(256);\r\n\tzero : any;\r\n\tone: any\r\n\tconstructor(primitive: any){\r\n\t\tvar x = 1;\r\n\t\tfor (var i = 0; i < 256; i++)\r\n\t\t{\r\n\t\t\tthis.expTable[i] = x;\r\n\t\t\tx <<= 1; // x = x * 2; we're assuming the generator alpha is 2\r\n\t\t\tif (x >= 0x100)\r\n\t\t\t{\r\n\t\t\t\tx ^= primitive;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var i = 0; i < 255; i++)\r\n\t\t{\r\n\t\t\tthis.logTable[this.expTable[i]] = i;\r\n\t\t}\r\n\t\t// logTable[0] == 0 but this should never be used\r\n\t\tvar at0=new Array(1);at0[0]=0;\r\n\t\tthis.zero = new GF256Poly(this, new Array(at0));\r\n\t\tvar at1=new Array(1);at1[0]=1;\r\n\t\tthis.one = new GF256Poly(this, new Array(at1));\r\n\t}\r\n\r\n\r\n\r\n\tget Zero(): any\r\n\t{\r\n\t\treturn this.zero;\r\n\t};\r\n\tget One(): any\r\n\t{\r\n\t\treturn this.one;\r\n\t};\r\n\tbuildMonomial( degree: any,  coefficient: any): any\r\n\t{\r\n\t\tif (degree < 0)\r\n\t\t{\r\n\t\t\tthrow \"System.ArgumentException\";\r\n\t\t}\r\n\t\tif (coefficient == 0)\r\n\t\t{\r\n\t\t\treturn this.zero;\r\n\t\t}\r\n\t\tvar coefficients = new Array(degree + 1);\r\n\t\tfor(var i=0;i<coefficients.length;i++)coefficients[i]=0;\r\n\t\tcoefficients[0] = coefficient;\r\n\t\treturn new GF256Poly(this, coefficients);\r\n\t}\r\n\texp( a: any): any\r\n\t{\r\n\t\treturn this.expTable[a];\r\n\t}\r\n\tlog( a: any): any\r\n\t{\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\tthrow \"System.ArgumentException\";\r\n\t\t}\r\n\t\treturn this.logTable[a];\r\n\t}\r\n\tinverse( a: any): any\r\n\t{\r\n\t\tif (a == 0)\r\n\t\t{\r\n\t\t\tthrow \"System.ArithmeticException\";\r\n\t\t}\r\n\t\treturn this.expTable[255 - this.logTable[a]];\r\n\t}\r\n\tmultiply( a: any,  b: any): any\r\n\t{\r\n\t\tif (a == 0 || b == 0)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (a == 1)\r\n\t\t{\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif (b == 1)\r\n\t\t{\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\treturn this.expTable[(this.logTable[a] + this.logTable[b]) % 255];\r\n\t}\r\n\r\n\tstatic addOrSubtract( a: any,  b:any ): any\r\n\t{\r\n\treturn a ^ b;\r\n\t}\r\n\r\n\tstatic QR_CODE_FIELD = new GF256(0x011D);\r\n\tstatic DATA_MATRIX_FIELD = new GF256(0x012D);\r\n}\r\n\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nimport {GF256Poly, GF256} from \"./gf256\"\r\n\r\n\r\nexport class ReedSolomonDecoder{\r\n\tfield: any;\r\n\r\n\tconstructor(field: any){\r\n\t\tthis.field = field;\r\n\t}\r\n\r\n\r\n\tdecode(received: any,  twoS: any): void\r\n\t{\r\n\t\tvar poly = new GF256Poly(this.field, received);\r\n\t\tvar syndromeCoefficients = new Array(twoS);\r\n\t\tfor(var i=0;i<syndromeCoefficients.length;i++)syndromeCoefficients[i]=0;\r\n\t\tvar dataMatrix = false;//this.field.Equals(GF256.DATA_MATRIX_FIELD);\r\n\t\tvar noError = true;\r\n\t\tfor (var i = 0; i < twoS; i++)\r\n\t\t{\r\n\t\t\t// Thanks to sanfordsquires for this fix:\r\n\t\t\tvar evalu = poly.evaluateAt(this.field.exp(dataMatrix?i + 1:i));\r\n\t\t\tsyndromeCoefficients[syndromeCoefficients.length - 1 - i] = evalu;\r\n\t\t\tif (evalu != 0)\r\n\t\t\t{\r\n\t\t\t\tnoError = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (noError)\r\n\t\t{\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tvar syndrome = new GF256Poly(this.field, syndromeCoefficients);\r\n\t\tvar sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(twoS, 1), syndrome, twoS);\r\n\t\tvar sigma = sigmaOmega[0];\r\n\t\tvar omega = sigmaOmega[1];\r\n\t\tvar errorLocations = this.findErrorLocations(sigma);\r\n\t\tvar errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations, dataMatrix);\r\n\t\tfor (var i = 0; i < errorLocations.length; i++)\r\n\t\t{\r\n\t\t\tvar position = received.length - 1 - this.field.log(errorLocations[i]);\r\n\t\t\tif (position < 0)\r\n\t\t\t{\r\n\t\t\t\tthrow \"ReedSolomonException Bad error location\";\r\n\t\t\t}\r\n\t\t\treceived[position] = GF256.addOrSubtract(received[position], errorMagnitudes[i]);\r\n\t\t}\r\n\t}\r\n\r\n\trunEuclideanAlgorithm( a: any,  b:any,  R:any): any\r\n\t{\r\n\t\t// Assume a's degree is >= b's\r\n\t\tif (a.Degree < b.Degree)\r\n\t\t{\r\n\t\t\tvar temp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = temp;\r\n\t\t}\r\n\r\n\t\tvar rLast = a;\r\n\t\tvar r = b;\r\n\t\tvar sLast = this.field.One;\r\n\t\tvar s = this.field.Zero;\r\n\t\tvar tLast = this.field.Zero;\r\n\t\tvar t = this.field.One;\r\n\r\n\t\t// Run Euclidean algorithm until r's degree is less than R/2\r\n\t\twhile (r.Degree >= Math.floor(R / 2))\r\n\t\t{\r\n\t\t\tvar rLastLast = rLast;\r\n\t\t\tvar sLastLast = sLast;\r\n\t\t\tvar tLastLast = tLast;\r\n\t\t\trLast = r;\r\n\t\t\tsLast = s;\r\n\t\t\ttLast = t;\r\n\r\n\t\t\t// Divide rLastLast by rLast, with quotient in q and remainder in r\r\n\t\t\tif (rLast.Zero)\r\n\t\t\t{\r\n\t\t\t\t// Oops, Euclidean algorithm already terminated?\r\n\t\t\t\tthrow \"r_{i-1} was zero\";\r\n\t\t\t}\r\n\t\t\tr = rLastLast;\r\n\t\t\tvar q = this.field.Zero;\r\n\t\t\tvar denominatorLeadingTerm = rLast.getCoefficient(rLast.Degree);\r\n\t\t\tvar dltInverse = this.field.inverse(denominatorLeadingTerm);\r\n\t\t\twhile (r.Degree >= rLast.Degree && !r.Zero)\r\n\t\t\t{\r\n\t\t\t\tvar degreeDiff = r.Degree - rLast.Degree;\r\n\t\t\t\tvar scale = this.field.multiply(r.getCoefficient(r.Degree), dltInverse);\r\n\t\t\t\tq = q.addOrSubtract(this.field.buildMonomial(degreeDiff, scale));\r\n\t\t\t\tr = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\r\n\t\t\t\t//r.EXE();\r\n\t\t\t}\r\n\r\n\t\t\ts = q.multiply1(sLast).addOrSubtract(sLastLast);\r\n\t\t\tt = q.multiply1(tLast).addOrSubtract(tLastLast);\r\n\t\t}\r\n\r\n\t\tvar sigmaTildeAtZero = t.getCoefficient(0);\r\n\t\tif (sigmaTildeAtZero == 0)\r\n\t\t{\r\n\t\t\tthrow \"ReedSolomonException sigmaTilde(0) was zero\";\r\n\t\t}\r\n\r\n\t\tvar inverse = this.field.inverse(sigmaTildeAtZero);\r\n\t\tvar sigma = t.multiply2(inverse);\r\n\t\tvar omega = r.multiply2(inverse);\r\n\t\treturn new Array(sigma, omega);\r\n\t}\r\n\tfindErrorLocations( errorLocator:any ): any\r\n\t{\r\n\t\t// This is a direct application of Chien's search\r\n\t\tvar numErrors = errorLocator.Degree;\r\n\t\tif (numErrors == 1)\r\n\t\t{\r\n\t\t\t// shortcut\r\n\t\t\treturn new Array(errorLocator.getCoefficient(1));\r\n\t\t}\r\n\t\tvar result = new Array(numErrors);\r\n\t\tvar e = 0;\r\n\t\tfor (var i = 1; i < 256 && e < numErrors; i++)\r\n\t\t{\r\n\t\t\tif (errorLocator.evaluateAt(i) == 0)\r\n\t\t\t{\r\n\t\t\t\tresult[e] = this.field.inverse(i);\r\n\t\t\t\te++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (e != numErrors)\r\n\t\t{\r\n\t\t\tthrow \"Error locator degree does not match number of roots\";\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tfindErrorMagnitudes( errorEvaluator:any,  errorLocations:any,  dataMatrix:any): any\r\n\t{\r\n\t// This is directly applying Forney's Formula\r\n\t\tvar s = errorLocations.length;\r\n\t\tvar result = new Array(s);\r\n\t\tfor (var i = 0; i < s; i++)\r\n\t\t{\r\n\t\t\tvar xiInverse = this.field.inverse(errorLocations[i]);\r\n\t\t\tvar denominator = 1;\r\n\t\t\tfor (var j = 0; j < s; j++)\r\n\t\t\t{\r\n\t\t\t\tif (i != j)\r\n\t\t\t\t{\r\n\t\t\t\t\tdenominator = this.field.multiply(denominator, GF256.addOrSubtract(1, this.field.multiply(errorLocations[j], xiInverse)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult[i] = this.field.multiply(errorEvaluator.evaluateAt(xiInverse), this.field.inverse(denominator));\r\n\t\t\t// Thanks to sanfordsquires for this fix:\r\n\t\t\tif (dataMatrix)\r\n\t\t\t{\r\n\t\t\t\tresult[i] = this.field.multiply(result[i], xiInverse);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nexport class DataMask000{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn ((i + j) & 0x01) == 0;\r\n\t}\r\n}\r\n\r\nexport class DataMask001{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn (i & 0x01) == 0;\r\n\t}\r\n}\r\n\r\n\r\nexport class DataMask010{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn j % 3 == 0;\r\n\t}\r\n}\r\nexport class DataMask011{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn (i + j) % 3 == 0;\r\n\t}\r\n}\r\n\r\nexport class DataMask100{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tURShift( number:any,  bits:any):any\r\n\t{\r\n\t\tif (number >= 0)\r\n\t\t\treturn number >> bits;\r\n\t\telse\r\n\t\t\treturn (number >> bits) + (2 << ~bits);\r\n\t}\r\n\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn (((this.URShift(i, 1)) + (j / 3)) & 0x01) == 0;\r\n\t}\r\n}\r\nexport class DataMask101{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\tvar temp = i * j;\r\n\t\treturn (temp & 0x01) + (temp % 3) == 0;\r\n\t}\r\n}\r\n\r\nexport class DataMask110{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\tvar temp = i * j;\r\n\t\treturn (((temp & 0x01) + (temp % 3)) & 0x01) == 0;\r\n\t}\r\n}\r\n\r\nexport class DataMask111{\r\n\tunmaskBitMatrix(bits:any,  dimension:any):any\r\n\t{\r\n\t\tfor (var i = 0; i < dimension; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < dimension; j++)\r\n\t\t\t{\r\n\t\t\t\tif (this.isMasked(i, j))\r\n\t\t\t\t{\r\n\t\t\t\t\tbits.flip(j, i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tisMasked=function( i:any,  j:any)\r\n\t{\r\n\t\treturn ((((i + j) & 0x01) + ((i * j) % 3)) & 0x01) == 0;\r\n\t}\r\n}\r\n\r\nexport class DataMask{\r\n\tstatic DATA_MASKS = new Array(new DataMask000(), new DataMask001(), new DataMask010(), new DataMask011(), new DataMask100(), new DataMask101(), new DataMask110(), new DataMask111());\r\n\tstatic forReference(reference:any):any\r\n\t{\r\n\t\tif (reference < 0 || reference > 7)\r\n\t\t{\r\n\t\t\tthrow \"System.ArgumentException\";\r\n\t\t}\r\n\t\treturn DataMask.DATA_MASKS[reference];\r\n\t}\r\n}\r\n\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nimport {BitMatrix} from \"./bitmat\";\r\nimport {DataMask} from \"./datamask\"\r\nimport {FormatInformation} from \"./formatinf\";\r\nimport {Version} from \"./version\"\r\n\r\n\r\nexport class BitMatrixParser{\r\n\tbitMatrix: BitMatrix;\r\n\tparsedVersion: any;\r\n\tparsedFormatInfo: any;\r\n\r\n\tconstructor(bitmatrix: BitMatrix){\r\n\t\tvar dimension = bitmatrix.Dimension;\r\n\t\tif (dimension < 21 || (dimension & 0x03) != 1)\r\n\t\t{\r\n\t\t\tthrow \"Error BitMatrixParser\";\r\n\t\t}\r\n\t\tthis.bitMatrix = bitmatrix;\r\n\t}\r\n\r\n\tcopyBit( i:any,  j:any,  versionBits:any):any\r\n\t{\r\n\t\treturn this.bitMatrix.get_Renamed(i, j)?(versionBits << 1) | 0x1:versionBits << 1;\r\n\t}\r\n\r\n\treadFormatInformation():any\r\n\t{\r\n\t\tif (this.parsedFormatInfo != null)\r\n\t\t{\r\n\t\t\treturn this.parsedFormatInfo;\r\n\t\t}\r\n\r\n\t\t// Read top-left format info bits\r\n\t\tvar formatInfoBits = 0;\r\n\t\tfor (var i = 0; i < 6; i++)\r\n\t\t{\r\n\t\t\tformatInfoBits = this.copyBit(i, 8, formatInfoBits);\r\n\t\t}\r\n\t\t// .. and skip a bit in the timing pattern ...\r\n\t\tformatInfoBits = this.copyBit(7, 8, formatInfoBits);\r\n\t\tformatInfoBits = this.copyBit(8, 8, formatInfoBits);\r\n\t\tformatInfoBits = this.copyBit(8, 7, formatInfoBits);\r\n\t\t// .. and skip a bit in the timing pattern ...\r\n\t\tfor (var j = 5; j >= 0; j--)\r\n\t\t{\r\n\t\t\tformatInfoBits = this.copyBit(8, j, formatInfoBits);\r\n\t\t}\r\n\r\n\t\tthis.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits);\r\n\t\tif (this.parsedFormatInfo != null)\r\n\t\t{\r\n\t\t\treturn this.parsedFormatInfo;\r\n\t\t}\r\n\r\n\t\t// Hmm, failed. Try the top-right/bottom-left pattern\r\n\t\tvar dimension = this.bitMatrix.Dimension;\r\n\t\tformatInfoBits = 0;\r\n\t\tvar iMin = dimension - 8;\r\n\t\tfor (var i = dimension - 1; i >= iMin; i--)\r\n\t\t{\r\n\t\t\tformatInfoBits = this.copyBit(i, 8, formatInfoBits);\r\n\t\t}\r\n\t\tfor (var j = dimension - 7; j < dimension; j++)\r\n\t\t{\r\n\t\t\tformatInfoBits = this.copyBit(8, j, formatInfoBits);\r\n\t\t}\r\n\r\n\t\tthis.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits);\r\n\t\tif (this.parsedFormatInfo != null)\r\n\t\t{\r\n\t\t\treturn this.parsedFormatInfo;\r\n\t\t}\r\n\t\tthrow \"Error readFormatInformation\";\r\n\t}\r\n\treadVersion():any\r\n\t{\r\n\r\n\t\tif (this.parsedVersion != null)\r\n\t\t{\r\n\t\t\treturn this.parsedVersion;\r\n\t\t}\r\n\r\n\t\tvar dimension = this.bitMatrix.Dimension;\r\n\r\n\t\tvar provisionalVersion = (dimension - 17) >> 2;\r\n\t\tif (provisionalVersion <= 6)\r\n\t\t{\r\n\t\t\treturn Version.getVersionForNumber(provisionalVersion);\r\n\t\t}\r\n\r\n\t\t// Read top-right version info: 3 wide by 6 tall\r\n\t\tvar versionBits = 0;\r\n\t\tvar ijMin = dimension - 11;\r\n\t\tfor (var j = 5; j >= 0; j--)\r\n\t\t{\r\n\t\t\tfor (var i = dimension - 9; i >= ijMin; i--)\r\n\t\t\t{\r\n\t\t\t\tversionBits = this.copyBit(i, j, versionBits);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.parsedVersion = Version.decodeVersionInformation(versionBits);\r\n\t\tif (this.parsedVersion != null && this.parsedVersion.DimensionForVersion == dimension)\r\n\t\t{\r\n\t\t\treturn this.parsedVersion;\r\n\t\t}\r\n\r\n\t\t// Hmm, failed. Try bottom left: 6 wide by 3 tall\r\n\t\tversionBits = 0;\r\n\t\tfor (var i = 5; i >= 0; i--)\r\n\t\t{\r\n\t\t\tfor (var j = dimension - 9; j >= ijMin; j--)\r\n\t\t\t{\r\n\t\t\t\tversionBits = this.copyBit(i, j, versionBits);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.parsedVersion = Version.decodeVersionInformation(versionBits);\r\n\t\tif (this.parsedVersion != null && this.parsedVersion.DimensionForVersion == dimension)\r\n\t\t{\r\n\t\t\treturn this.parsedVersion;\r\n\t\t}\r\n\t\tthrow \"Error readVersion\";\r\n\t}\r\n\treadCodewords():any\r\n\t{\r\n\r\n\t\tvar formatInfo = this.readFormatInformation();\r\n\t\tvar version = this.readVersion();\r\n\r\n\t\t// Get the data mask for the format used in this QR Code. This will exclude\r\n\t\t// some bits from reading as we wind through the bit matrix.\r\n\t\tvar dataMask = DataMask.forReference( formatInfo.DataMask);\r\n\t\tvar dimension = this.bitMatrix.Dimension;\r\n\t\tdataMask.unmaskBitMatrix(this.bitMatrix, dimension);\r\n\r\n\t\tvar functionPattern = version.buildFunctionPattern();\r\n\r\n\t\tvar readingUp = true;\r\n\t\tvar result = new Array(version.TotalCodewords);\r\n\t\tvar resultOffset = 0;\r\n\t\tvar currentByte = 0;\r\n\t\tvar bitsRead = 0;\r\n\t\t// Read columns in pairs, from right to left\r\n\t\tfor (var j = dimension - 1; j > 0; j -= 2)\r\n\t\t{\r\n\t\t\tif (j == 6)\r\n\t\t\t{\r\n\t\t\t\t// Skip whole column with vertical alignment pattern;\r\n\t\t\t\t// saves time and makes the other code proceed more cleanly\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t\t// Read alternatingly from bottom to top then top to bottom\r\n\t\t\tfor (var count = 0; count < dimension; count++)\r\n\t\t\t{\r\n\t\t\t\tvar i = readingUp?dimension - 1 - count:count;\r\n\t\t\t\tfor (var col = 0; col < 2; col++)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Ignore bits covered by the function pattern\r\n\t\t\t\t\tif (!functionPattern.get_Renamed(j - col, i))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Read a bit\r\n\t\t\t\t\t\tbitsRead++;\r\n\t\t\t\t\t\tcurrentByte <<= 1;\r\n\t\t\t\t\t\tif (this.bitMatrix.get_Renamed(j - col, i))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrentByte |= 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If we've made a whole byte, save it off\r\n\t\t\t\t\t\tif (bitsRead == 8)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tresult[resultOffset++] =  currentByte;\r\n\t\t\t\t\t\t\tbitsRead = 0;\r\n\t\t\t\t\t\t\tcurrentByte = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treadingUp = !readingUp; // readingUp = !readingUp; // switch directions\r\n\t\t}\r\n\t\tif (resultOffset != version.TotalCodewords)\r\n\t\t{\r\n\t\t\tthrow \"Error readCodewords\";\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\n\r\nexport class DataBlock{\r\n\tnumDataCodewords:any;\r\n\tcodewords: any;\r\n\r\n\tconstructor(numDataCodewords:any,  codewords:any){\r\n\t\tthis.numDataCodewords = numDataCodewords;\r\n\t\tthis.codewords = codewords;\r\n\t}\r\n\r\n\tget NumDataCodewords(): any{\r\n\t\treturn this.numDataCodewords;\r\n\t}\r\n\r\n\tget Codewords(): any{\r\n\t\treturn this.codewords;\r\n\t}\r\n\r\n\tstatic getDataBlocks(rawCodewords: any,  version: any,  ecLevel: any)\r\n\t{\r\n\r\n\t\tif (rawCodewords.length != version.TotalCodewords)\r\n\t\t{\r\n\t\t\tthrow \"ArgumentException\";\r\n\t\t}\r\n\r\n\t\t// Figure out the number and size of data blocks used by this version and\r\n\t\t// error correction level\r\n\t\tvar ecBlocks = version.getECBlocksForLevel(ecLevel);\r\n\r\n\t\t// First count the total number of data blocks\r\n\t\tvar totalBlocks = 0;\r\n\t\tvar ecBlockArray = ecBlocks.getECBlocks();\r\n\t\tfor (var i = 0; i < ecBlockArray.length; i++)\r\n\t\t{\r\n\t\t\ttotalBlocks += ecBlockArray[i].Count;\r\n\t\t}\r\n\r\n\t\t// Now establish DataBlocks of the appropriate size and number of data codewords\r\n\t\tvar result = new Array(totalBlocks);\r\n\t\tvar numResultBlocks = 0;\r\n\t\tfor (var j = 0; j < ecBlockArray.length; j++)\r\n\t\t{\r\n\t\t\tvar ecBlock = ecBlockArray[j];\r\n\t\t\tfor (var i = 0; i < ecBlock.Count; i++)\r\n\t\t\t{\r\n\t\t\t\tvar numDataCodewords = ecBlock.DataCodewords;\r\n\t\t\t\tvar numBlockCodewords = ecBlocks.ECCodewordsPerBlock + numDataCodewords;\r\n\t\t\t\tresult[numResultBlocks++] = new DataBlock(numDataCodewords, new Array(numBlockCodewords));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// All blocks have the same amount of data, except that the last n\r\n\t\t// (where n may be 0) have 1 more byte. Figure out where these start.\r\n\t\tvar shorterBlocksTotalCodewords = result[0].codewords.length;\r\n\t\tvar longerBlocksStartAt = result.length - 1;\r\n\t\twhile (longerBlocksStartAt >= 0)\r\n\t\t{\r\n\t\t\tvar numCodewords = result[longerBlocksStartAt].codewords.length;\r\n\t\t\tif (numCodewords == shorterBlocksTotalCodewords)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlongerBlocksStartAt--;\r\n\t\t}\r\n\t\tlongerBlocksStartAt++;\r\n\r\n\t\tvar shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.ECCodewordsPerBlock;\r\n\t\t// The last elements of result may be 1 element longer;\r\n\t\t// first fill out as many elements as all of them have\r\n\t\tvar rawCodewordsOffset = 0;\r\n\t\tfor (var i = 0; i < shorterBlocksNumDataCodewords; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < numResultBlocks; j++)\r\n\t\t\t{\r\n\t\t\t\tresult[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Fill out the last data block in the longer ones\r\n\t\tfor (var j = longerBlocksStartAt; j < numResultBlocks; j++)\r\n\t\t{\r\n\t\t\tresult[j].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];\r\n\t\t}\r\n\t\t// Now add in error correction blocks\r\n\t\tvar max = result[0].codewords.length;\r\n\t\tfor (var i = shorterBlocksNumDataCodewords; i < max; i++)\r\n\t\t{\r\n\t\t\tfor (var j = 0; j < numResultBlocks; j++)\r\n\t\t\t{\r\n\t\t\t\tvar iOffset = j < longerBlocksStartAt?i:i + 1;\r\n\t\t\t\tresult[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\nexport class QRCodeDataBlockReader{\r\n\tblockPointer = 0\r\n\tbitPointer = 7\r\n\tdataLength = 0\r\n\tblocks: any;\r\n\tnumErrorCorrectionCode: any;\r\n\tdataLengthMode: number;\r\n\tstatic sizeOfDataLengthInfo =  [  [ 10, 9, 8, 8 ],  [ 12, 11, 16, 10 ],  [ 14, 13, 16, 12 ] ];\r\n\tconstructor(blocks:any,  version:any,  numErrorCorrectionCode:any){\r\n\t\tthis.blocks = blocks;\r\n\t\tthis.numErrorCorrectionCode = numErrorCorrectionCode;\r\n\t\tif (version <= 9)\r\n\t\t\tthis.dataLengthMode = 0;\r\n\t\telse if (version >= 10 && version <= 26)\r\n\t\t\tthis.dataLengthMode = 1;\r\n\t\telse if (version >= 27 && version <= 40)\r\n\t\t\tthis.dataLengthMode = 2;\r\n\t}\r\n\r\n\tgetNextBits( numBits: any): any\r\n\t{\r\n\t\tvar bits = 0;\r\n\t\tif (numBits < this.bitPointer + 1)\r\n\t\t{\r\n\t\t\t// next word fits into current data block\r\n\t\t\tvar mask = 0;\r\n\t\t\tfor (var i = 0; i < numBits; i++)\r\n\t\t\t{\r\n\t\t\t\tmask += (1 << i);\r\n\t\t\t}\r\n\t\t\tmask <<= (this.bitPointer - numBits + 1);\r\n\r\n\t\t\tbits = (this.blocks[this.blockPointer] & mask) >> (this.bitPointer - numBits + 1);\r\n\t\t\tthis.bitPointer -= numBits;\r\n\t\t\treturn bits;\r\n\t\t}\r\n\t\telse if (numBits < this.bitPointer + 1 + 8)\r\n\t\t{\r\n\t\t\t// next word crosses 2 data blocks\r\n\t\t\tvar mask1 = 0;\r\n\t\t\tfor (var i = 0; i < this.bitPointer + 1; i++)\r\n\t\t\t{\r\n\t\t\t\tmask1 += (1 << i);\r\n\t\t\t}\r\n\t\t\tbits = (this.blocks[this.blockPointer] & mask1) << (numBits - (this.bitPointer + 1));\r\n\t\t\tthis.blockPointer++;\r\n\t\t\tbits += ((this.blocks[this.blockPointer]) >> (8 - (numBits - (this.bitPointer + 1))));\r\n\r\n\t\t\tthis.bitPointer = this.bitPointer - numBits % 8;\r\n\t\t\tif (this.bitPointer < 0)\r\n\t\t\t{\r\n\t\t\t\tthis.bitPointer = 8 + this.bitPointer;\r\n\t\t\t}\r\n\t\t\treturn bits;\r\n\t\t}\r\n\t\telse if (numBits < this.bitPointer + 1 + 16)\r\n\t\t{\r\n\t\t\t// next word crosses 3 data blocks\r\n\t\t\tvar mask1 = 0; // mask of first block\r\n\t\t\tvar mask3 = 0; // mask of 3rd block\r\n\t\t\t//bitPointer + 1 : number of bits of the 1st block\r\n\t\t\t//8 : number of the 2nd block (note that use already 8bits because next word uses 3 data blocks)\r\n\t\t\t//numBits - (bitPointer + 1 + 8) : number of bits of the 3rd block\r\n\t\t\tfor (var i = 0; i < this.bitPointer + 1; i++)\r\n\t\t\t{\r\n\t\t\t\tmask1 += (1 << i);\r\n\t\t\t}\r\n\t\t\tvar bitsFirstBlock = (this.blocks[this.blockPointer] & mask1) << (numBits - (this.bitPointer + 1));\r\n\t\t\tthis.blockPointer++;\r\n\r\n\t\t\tvar bitsSecondBlock = this.blocks[this.blockPointer] << (numBits - (this.bitPointer + 1 + 8));\r\n\t\t\tthis.blockPointer++;\r\n\r\n\t\t\tfor (var i = 0; i < numBits - (this.bitPointer + 1 + 8); i++)\r\n\t\t\t{\r\n\t\t\t\tmask3 += (1 << i);\r\n\t\t\t}\r\n\t\t\tmask3 <<= 8 - (numBits - (this.bitPointer + 1 + 8));\r\n\t\t\tvar bitsThirdBlock = (this.blocks[this.blockPointer] & mask3) >> (8 - (numBits - (this.bitPointer + 1 + 8)));\r\n\r\n\t\t\tbits = bitsFirstBlock + bitsSecondBlock + bitsThirdBlock;\r\n\t\t\tthis.bitPointer = this.bitPointer - (numBits - 8) % 8;\r\n\t\t\tif (this.bitPointer < 0)\r\n\t\t\t{\r\n\t\t\t\tthis.bitPointer = 8 + this.bitPointer;\r\n\t\t\t}\r\n\t\t\treturn bits;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tNextMode():any\r\n\t{\r\n\t\tif ((this.blockPointer > this.blocks.length - this.numErrorCorrectionCode - 2))\r\n\t\t\treturn 0;\r\n\t\telse\r\n\t\t\treturn this.getNextBits(4);\r\n\t}\r\n\tgetDataLength( modeIndicator: any):any\r\n\t{\r\n\t\tvar index = 0;\r\n\t\twhile (true)\r\n\t\t{\r\n\t\t\tif ((modeIndicator >> index) == 1)\r\n\t\t\t\tbreak;\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn this.getNextBits(QRCodeDataBlockReader.sizeOfDataLengthInfo[this.dataLengthMode][index]);\r\n\t}\r\n\tgetRomanAndFigureString( dataLength:any ):any\r\n\t{\r\n\t\tvar length = dataLength;\r\n\t\tvar intData = 0;\r\n\t\tvar strData = \"\";\r\n\t\tvar tableRomanAndFigure = new Array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':');\r\n\t\tdo\r\n\t\t{\r\n\t\t\tif (length > 1)\r\n\t\t\t{\r\n\t\t\t\tintData = this.getNextBits(11);\r\n\t\t\t\tvar firstLetter = Math.floor(intData / 45);\r\n\t\t\t\tvar secondLetter = intData % 45;\r\n\t\t\t\tstrData += tableRomanAndFigure[firstLetter];\r\n\t\t\t\tstrData += tableRomanAndFigure[secondLetter];\r\n\t\t\t\tlength -= 2;\r\n\t\t\t}\r\n\t\t\telse if (length == 1)\r\n\t\t\t{\r\n\t\t\t\tintData = this.getNextBits(6);\r\n\t\t\t\tstrData += tableRomanAndFigure[intData];\r\n\t\t\t\tlength -= 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile (length > 0);\r\n\r\n\t\treturn strData;\r\n\t}\r\n\tgetFigureString( dataLength:any):any\r\n\t{\r\n\t\tvar length = dataLength;\r\n\t\tvar intData = 0;\r\n\t\tvar strData = \"\";\r\n\t\tdo\r\n\t\t{\r\n\t\t\tif (length >= 3)\r\n\t\t\t{\r\n\t\t\t\tintData = this.getNextBits(10);\r\n\t\t\t\tif (intData < 100)\r\n\t\t\t\t\tstrData += \"0\";\r\n\t\t\t\tif (intData < 10)\r\n\t\t\t\t\tstrData += \"0\";\r\n\t\t\t\tlength -= 3;\r\n\t\t\t}\r\n\t\t\telse if (length == 2)\r\n\t\t\t{\r\n\t\t\t\tintData = this.getNextBits(7);\r\n\t\t\t\tif (intData < 10)\r\n\t\t\t\t\tstrData += \"0\";\r\n\t\t\t\tlength -= 2;\r\n\t\t\t}\r\n\t\t\telse if (length == 1)\r\n\t\t\t{\r\n\t\t\t\tintData = this.getNextBits(4);\r\n\t\t\t\tlength -= 1;\r\n\t\t\t}\r\n\t\t\tstrData += intData;\r\n\t\t}\r\n\t\twhile (length > 0);\r\n\r\n\t\treturn strData;\r\n\t}\r\n\tget8bitByteArray( dataLength:any):any\r\n\t{\r\n\t\tvar length = dataLength;\r\n\t\tvar intData = 0;\r\n\t\tvar output = new Array();\r\n\r\n\t\tdo\r\n\t\t{\r\n\t\t\tintData = this.getNextBits(8);\r\n\t\t\toutput.push( intData);\r\n\t\t\tlength--;\r\n\t\t}\r\n\t\twhile (length > 0);\r\n\t\treturn output;\r\n\t}\r\n\tgetKanjiString( dataLength:any):any\r\n\t{\r\n\t\tvar length = dataLength;\r\n\t\tvar intData = 0;\r\n\t\tvar unicodeString = \"\";\r\n\t\tdo\r\n\t\t{\r\n\t\t\tintData = this.getNextBits(13);\r\n\t\t\tvar lowerByte = intData % 0xC0;\r\n\t\t\tvar higherByte = intData / 0xC0;\r\n\r\n\t\t\tvar tempWord = (higherByte << 8) + lowerByte;\r\n\t\t\tvar shiftjisWord = 0;\r\n\t\t\tif (tempWord + 0x8140 <= 0x9FFC)\r\n\t\t\t{\r\n\t\t\t\t// between 8140 - 9FFC on Shift_JIS character set\r\n\t\t\t\tshiftjisWord = tempWord + 0x8140;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// between E040 - EBBF on Shift_JIS character set\r\n\t\t\t\tshiftjisWord = tempWord + 0xC140;\r\n\t\t\t}\r\n\r\n\t\t\t//var tempByte = new Array(0,0);\r\n\t\t\t//tempByte[0] = (sbyte) (shiftjisWord >> 8);\r\n\t\t\t//tempByte[1] = (sbyte) (shiftjisWord & 0xFF);\r\n\t\t\t//unicodeString += new String(SystemUtils.ToCharArray(SystemUtils.ToByteArray(tempByte)));\r\n\t\t\tunicodeString += String.fromCharCode(shiftjisWord);\r\n\t\t\tlength--;\r\n\t\t}\r\n\t\twhile (length > 0);\r\n\r\n\r\n\t\treturn unicodeString;\r\n\t}\r\n\r\n\r\n\tget DataByte(): any\r\n\t{\r\n\t\tvar output = new Array();\r\n\t\tvar MODE_NUMBER = 1;\r\n\t\tvar MODE_ROMAN_AND_NUMBER = 2;\r\n\t\tvar MODE_8BIT_BYTE = 4;\r\n\t\tvar MODE_KANJI = 8;\r\n\t\tdo\r\n\t\t{\r\n\t\t\tvar mode = this.NextMode();\r\n\t\t\t//canvas.println(\"mode: \" + mode);\r\n\t\t\tif (mode == 0)\r\n\t\t\t{\r\n\t\t\t\tif (output.length > 0)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\telse\r\n\t\t\t\t\tthrow \"Empty data block\";\r\n\t\t\t}\r\n\t\t\t//if (mode != 1 && mode != 2 && mode != 4 && mode != 8)\r\n\t\t\t//\tbreak;\r\n\t\t\t//}\r\n\t\t\tif (mode != MODE_NUMBER && mode != MODE_ROMAN_AND_NUMBER && mode != MODE_8BIT_BYTE && mode != MODE_KANJI)\r\n\t\t\t{\r\n\t\t\t\t/*\t\t\t\t\tcanvas.println(\"Invalid mode: \" + mode);\r\n\t\t\t\t mode = guessMode(mode);\r\n\t\t\t\t canvas.println(\"Guessed mode: \" + mode); */\r\n\t\t\t\tthrow \"Invalid mode: \" + mode + \" in (block:\" + this.blockPointer + \" bit:\" + this.bitPointer + \")\";\r\n\t\t\t}\r\n\t\t\tlet dataLength = this.getDataLength(mode);\r\n\t\t\tif (dataLength < 1)\r\n\t\t\t\tthrow \"Invalid data length: \" + dataLength;\r\n\t\t\t//canvas.println(\"length: \" + dataLength);\r\n\t\t\tswitch (mode)\r\n\t\t\t{\r\n\r\n\t\t\t\tcase MODE_NUMBER:\r\n\t\t\t\t\t//canvas.println(\"Mode: Figure\");\r\n\t\t\t\t\tvar temp_str = this.getFigureString(dataLength);\r\n\t\t\t\t\tvar ta = new Array(temp_str.length);\r\n\t\t\t\t\tfor(var j=0;j<temp_str.length;j++)\r\n\t\t\t\t\t\tta[j]=temp_str.charCodeAt(j);\r\n\t\t\t\t\toutput.push(ta);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MODE_ROMAN_AND_NUMBER:\r\n\t\t\t\t\t//canvas.println(\"Mode: Roman&Figure\");\r\n\t\t\t\t\tvar temp_str = this.getRomanAndFigureString(dataLength);\r\n\t\t\t\t\tvar ta = new Array(temp_str.length);\r\n\t\t\t\t\tfor(var j=0;j<temp_str.length;j++)\r\n\t\t\t\t\t\tta[j]=temp_str.charCodeAt(j);\r\n\t\t\t\t\toutput.push(ta );\r\n\t\t\t\t\t//output.Write(SystemUtils.ToByteArray(temp_sbyteArray2), 0, temp_sbyteArray2.Length);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MODE_8BIT_BYTE:\r\n\t\t\t\t\t//canvas.println(\"Mode: 8bit Byte\");\r\n\t\t\t\t\t//sbyte[] temp_sbyteArray3;\r\n\t\t\t\t\tvar temp_sbyteArray3 = this.get8bitByteArray(dataLength);\r\n\t\t\t\t\toutput.push(temp_sbyteArray3);\r\n\t\t\t\t\t//output.Write(SystemUtils.ToByteArray(temp_sbyteArray3), 0, temp_sbyteArray3.Length);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MODE_KANJI:\r\n\t\t\t\t\t//canvas.println(\"Mode: Kanji\");\r\n\t\t\t\t\t//sbyte[] temp_sbyteArray4;\r\n\t\t\t\t\t//temp_sbyteArray4 = SystemUtils.ToSByteArray(SystemUtils.ToByteArray(getKanjiString(dataLength)));\r\n\t\t\t\t\t//output.Write(SystemUtils.ToByteArray(temp_sbyteArray4), 0, temp_sbyteArray4.Length);\r\n\t\t\t\t\tvar temp_str = this.getKanjiString(dataLength);\r\n\t\t\t\t\toutput.push(temp_str);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//\r\n\t\t\t//canvas.println(\"DataLength: \" + dataLength);\r\n\t\t\t//Console.out.println(dataString);\r\n\t\t}\r\n\t\twhile (true);\r\n\t\treturn output;\r\n\t};\r\n\r\n\r\n\r\n\r\n}",
    "/*\r\n  Ported to JavaScript by Lazar Laszlo 2011 \r\n  \r\n  lazarsoft@gmail.com, www.lazarsoft.info\r\n  \r\n*/\r\n\r\n/*\r\n*\r\n* Copyright 2007 ZXing authors\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*      http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\nimport {ReedSolomonDecoder} from \"./rsdecoder\"\r\nimport {GF256} from \"./gf256\"\r\nimport {BitMatrixParser} from \"./bmparser\"\r\nimport {DataBlock} from \"./datablock\"\r\nimport {QRCodeDataBlockReader} from \"./databr\"\r\n\r\nexport class Decoder{\r\n\trsDecoder = new ReedSolomonDecoder(GF256.QR_CODE_FIELD);\r\n\r\n\r\n\tcorrectErrors( codewordBytes:any,  numDataCodewords:any): void\r\n\t{\r\n\t\tvar numCodewords = codewordBytes.length;\r\n\t\t// First read into an array of ints\r\n\t\tvar codewordsInts = new Array(numCodewords);\r\n\t\tfor (var i = 0; i < numCodewords; i++)\r\n\t\t{\r\n\t\t\tcodewordsInts[i] = codewordBytes[i] & 0xFF;\r\n\t\t}\r\n\t\tvar numECCodewords = codewordBytes.length - numDataCodewords;\r\n\t\ttry\r\n\t\t{\r\n\t\t\tthis.rsDecoder.decode(codewordsInts, numECCodewords);\r\n\t\t\t//var corrector = new ReedSolomon(codewordsInts, numECCodewords);\r\n\t\t\t//corrector.correct();\r\n\t\t}\r\n\t\tcatch ( rse)\r\n\t\t{\r\n\t\t\tthrow rse;\r\n\t\t}\r\n\t\t// Copy back into array of bytes -- only need to worry about the bytes that were data\r\n\t\t// We don't care about errors in the error-correction codewords\r\n\t\tfor (var i = 0; i < numDataCodewords; i++)\r\n\t\t{\r\n\t\t\tcodewordBytes[i] =  codewordsInts[i];\r\n\t\t}\r\n\t}\r\n\r\n\tdecode=function(bits: any)\r\n\t{\r\n\t\tvar parser: BitMatrixParser = new BitMatrixParser(bits);\r\n\t\tvar version = parser.readVersion();\r\n\t\tvar ecLevel = parser.readFormatInformation().ErrorCorrectionLevel;\r\n\r\n\t\t// Read codewords\r\n\t\tvar codewords = parser.readCodewords();\r\n\r\n\t\t// Separate into data blocks\r\n\t\tvar dataBlocks = DataBlock.getDataBlocks(codewords, version, ecLevel);\r\n\r\n\t\t// Count total number of data bytes\r\n\t\tvar totalBytes = 0;\r\n\t\tfor (var i = 0; i < dataBlocks.length; i++)\r\n\t\t{\r\n\t\t\ttotalBytes += dataBlocks[i].NumDataCodewords;\r\n\t\t}\r\n\t\tvar resultBytes = new Array(totalBytes);\r\n\t\tvar resultOffset = 0;\r\n\r\n\t\t// Error-correct and copy data blocks together into a stream of bytes\r\n\t\tfor (var j = 0; j < dataBlocks.length; j++)\r\n\t\t{\r\n\t\t\tvar dataBlock = dataBlocks[j];\r\n\t\t\tvar codewordBytes = dataBlock.Codewords;\r\n\t\t\tvar numDataCodewords = dataBlock.NumDataCodewords;\r\n\t\t\tthis.correctErrors(codewordBytes, numDataCodewords);\r\n\t\t\tfor (var i = 0; i < numDataCodewords; i++)\r\n\t\t\t{\r\n\t\t\t\tresultBytes[resultOffset++] = codewordBytes[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Decode the contents of that stream of bytes\r\n\t\tvar reader = new QRCodeDataBlockReader(resultBytes, version.VersionNumber, ecLevel.Bits);\r\n\t\treturn reader;\r\n\t\t//return DecodedBitStreamParser.decode(resultBytes, version, ecLevel);\r\n\t}\r\n}\r\n",
    "import {Detector} from \"./detector\"\r\nimport {Decoder} from \"./decoder\"\r\n/*\r\n   Copyright 2011 Lazar Laszlo (lazarsoft@gmail.com, www.lazarsoft.info)\r\n   \r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\r\nexport class QRCode  {\r\n    imagedata: ImageData;\r\n    width: number;\r\n    height: number;\r\n    debug: boolean = false;\r\n    maxImgSize: number = 1024*1024;\r\n    sizeOfDataLengthInfo =  [  [ 10, 9, 8, 8 ],  [ 12, 11, 16, 10 ],  [ 14, 13, 16, 12 ] ];\r\n    result: string;\r\n\r\n    public myCallback: (qrText: string) => void;\r\n\r\n    public decode(canvas: HTMLCanvasElement): string {\r\n\r\n        let context = canvas.getContext('2d');\r\n        this.width = canvas.width;\r\n        this.height = canvas.height;\r\n        this.imagedata = context.getImageData(0, 0, this.width, this.height);\r\n        this.result = this.process(context);\r\n        if(this.myCallback!=null)\r\n            this.myCallback(this.result);\r\n        return this.result;\r\n    }\r\n\r\n    process(context: CanvasRenderingContext2D): string {\r\n        var start = new Date().getTime();\r\n        var image = this.grayScaleToBitmap(this.grayscale());\r\n\r\n        if(this.debug)\r\n        {\r\n            for (var y = 0; y < this.height; y++)\r\n            {\r\n                for (var x = 0; x < this.width; x++)\r\n                {\r\n                    var point = (x * 4) + (y * this.width * 4);\r\n                    this.imagedata.data[point] = image[x+y*this.width]?0:0;\r\n                    this.imagedata.data[point+1] = image[x+y*this.width]?0:0;\r\n                    this.imagedata.data[point+2] = image[x+y*this.width]?255:0;\r\n                }\r\n            }\r\n            context.putImageData(this.imagedata, 0, 0);\r\n        }\r\n\r\n        var detector = new Detector(image,this.imagedata, this.width, this.height);\r\n\r\n        var qRCodeMatrix = detector.detect();\r\n        if(this.debug)\r\n            context.putImageData(this.imagedata, 0, 0);\r\n        var decoder  = new Decoder();\r\n        var reader = decoder.decode(qRCodeMatrix.bits);\r\n        var data = reader.DataByte;\r\n        var str=\"\";\r\n        for(var i=0;i<data.length;i++)\r\n        {\r\n            for(var j=0;j<data[i].length;j++)\r\n                str+=String.fromCharCode(data[i][j]);\r\n        }\r\n\r\n        var end = new Date().getTime();\r\n        var time = end - start;\r\n        console.log(time);\r\n\r\n        return str;\r\n    }\r\n\r\n    grayScaleToBitmap(grayScale: Array<number>): Array<number>\r\n    {\r\n        var middle = this.getMiddleBrightnessPerArea(grayScale);\r\n        var sqrtNumArea = middle.length;\r\n        var areaWidth = Math.floor(this.width / sqrtNumArea);\r\n        var areaHeight = Math.floor(this.height / sqrtNumArea);\r\n        var bitmap = new Array(this.height*this.width);\r\n\r\n        for (var ay = 0; ay < sqrtNumArea; ay++)\r\n        {\r\n            for (var ax = 0; ax < sqrtNumArea; ax++)\r\n            {\r\n                for (var dy = 0; dy < areaHeight; dy++)\r\n                {\r\n                    for (var dx = 0; dx < areaWidth; dx++)\r\n                    {\r\n                        bitmap[areaWidth * ax + dx+ (areaHeight * ay + dy)*this.width] = (grayScale[areaWidth * ax + dx+ (areaHeight * ay + dy)*this.width] < middle[ax][ay])?true:false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return bitmap;\r\n    }\r\n\r\n    grayscale(): Array<number>{\r\n        var ret = new Array(this.width*this.height);\r\n        for (var y = 0; y < this.height; y++)\r\n        {\r\n            for (var x = 0; x < this.width; x++)\r\n            {\r\n                var gray = this.getPixel(x, y);\r\n\r\n                ret[x+y*this.width] = gray;\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    getPixel(x:number,y:number): number{\r\n        if (this.width < x) {\r\n            throw \"point error\";\r\n        }\r\n        if (this.height < y) {\r\n            throw \"point error\";\r\n        }\r\n        let point = (x * 4) + (y * this.width * 4);\r\n        let p = (this.imagedata.data[point]*33 + this.imagedata.data[point + 1]*34 + this.imagedata.data[point + 2]*33)/100;\r\n        return p;\r\n    }\r\n\r\n    getMiddleBrightnessPerArea(image: Array<number>): Array<Array<number>>\r\n    {\r\n        var numSqrtArea = 4;\r\n        //obtain middle brightness((min + max) / 2) per area\r\n        var areaWidth = Math.floor(this.width / numSqrtArea);\r\n        var areaHeight = Math.floor(this.height / numSqrtArea);\r\n        var minmax = new Array(numSqrtArea);\r\n        for (var i = 0; i < numSqrtArea; i++)\r\n        {\r\n            minmax[i] = new Array(numSqrtArea);\r\n            for (var i2 = 0; i2 < numSqrtArea; i2++)\r\n            {\r\n                minmax[i][i2] = new Array(0,0);\r\n            }\r\n        }\r\n        for (var ay = 0; ay < numSqrtArea; ay++)\r\n        {\r\n            for (var ax = 0; ax < numSqrtArea; ax++)\r\n            {\r\n                minmax[ax][ay][0] = 0xFF;\r\n                for (var dy = 0; dy < areaHeight; dy++)\r\n                {\r\n                    for (var dx = 0; dx < areaWidth; dx++)\r\n                    {\r\n                        var target = image[areaWidth * ax + dx+(areaHeight * ay + dy)*this.width];\r\n                        if (target < minmax[ax][ay][0])\r\n                            minmax[ax][ay][0] = target;\r\n                        if (target > minmax[ax][ay][1])\r\n                            minmax[ax][ay][1] = target;\r\n                    }\r\n                }\r\n                //minmax[ax][ay][0] = (minmax[ax][ay][0] + minmax[ax][ay][1]) / 2;\r\n            }\r\n        }\r\n        var middle = new Array(numSqrtArea);\r\n        for (var i3 = 0; i3 < numSqrtArea; i3++)\r\n        {\r\n            middle[i3] = new Array(numSqrtArea);\r\n        }\r\n        for (var ay = 0; ay < numSqrtArea; ay++)\r\n        {\r\n            for (var ax = 0; ax < numSqrtArea; ax++)\r\n            {\r\n                middle[ax][ay] = Math.floor((minmax[ax][ay][0] + minmax[ax][ay][1]) / 2);\r\n                //Console.out.print(middle[ax][ay] + \",\");\r\n            }\r\n            //Console.out.println(\"\");\r\n        }\r\n        //Console.out.println(\"\");\r\n\r\n        return middle;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n//\r\n// Array.prototype.remove = function(from, to) {\r\n//   var rest = this.slice((to || from) + 1 || this.length);\r\n//   this.length = from < 0 ? this.length + from : from;\r\n//   return this.push.apply(this, rest);\r\n// };\r\n",
    "import {\r\n    AfterViewInit,\r\n    Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\r\n    ViewChild, Renderer2\r\n} from '@angular/core';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {QRCode} from './lib/qr-decoder/qrcode';\r\n\r\n@Component({\r\n    selector: 'qr-scanner',\r\n    styles: [\r\n        ':host video {height: auto; width: 100%;}',\r\n        ':host .mirrored { transform: rotateY(180deg); -webkit-transform:rotateY(180deg); -moz-transform:rotateY(180deg); }',\r\n        ':host {}'\r\n    ],\r\n    template: `\r\n        <ng-container [ngSwitch]=\"isCanvasSupported\">\r\n            <ng-container *ngSwitchDefault>\r\n                <canvas #qrCanvas [hidden]=\"canvasHidden\" [width]=\"canvasWidth\" [height]=\"canvasHeight\"></canvas>\r\n                <div #videoWrapper [style.width]=\"canvasWidth\" [style.height]=\"canvasHeight\"></div>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"false\">\r\n                <p>\r\n                    You are using an <strong>outdated</strong> browser.\r\n                    Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.\r\n                </p>\r\n            </ng-container>\r\n        </ng-container>`\r\n})\r\nexport class QrScannerComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n    @Input() canvasWidth = 640;\r\n    @Input() canvasHeight = 480;\r\n    @Input() debug = false;\r\n    @Input() stopAfterScan = true;\r\n    @Input() updateTime = 500;\r\n\r\n    @Output() capturedQr: EventEmitter<string> = new EventEmitter();\r\n    @Output() foundCameras: EventEmitter<MediaDeviceInfo[]> = new EventEmitter();\r\n\r\n    @ViewChild('videoWrapper') videoWrapper: ElementRef;\r\n    @ViewChild('qrCanvas') qrCanvas: ElementRef;\r\n\r\n    @Input() chooseCamera: Subject<MediaDeviceInfo> = new Subject();\r\n\r\n    private chooseCamera$: Subscription;\r\n\r\n    public gCtx: CanvasRenderingContext2D;\r\n    public videoElement: HTMLVideoElement;\r\n    public qrCode: QRCode;\r\n    public stream: MediaStream;\r\n    public captureTimeout: any;\r\n    public  canvasHidden = true;\r\n    get isCanvasSupported(): boolean {\r\n        const canvas = this.renderer.createElement('canvas');\r\n        return !!(canvas.getContext && canvas.getContext('2d'));\r\n    }\r\n\r\n    constructor(private renderer: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.chooseCamera$.unsubscribe();\r\n        this.stopScanning();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.debug) console.log('[QrScanner] ViewInit, isSupported: ', this.isCanvasSupported);\r\n        if (this.isCanvasSupported) {\r\n            this.gCtx = this.qrCanvas.nativeElement.getContext('2d');\r\n            this.gCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n            this.qrCode = new QRCode();\r\n            if (this.debug) this.qrCode.debug = true;\r\n            this.qrCode.myCallback = (decoded: string) => this.QrDecodeCallback(decoded);\r\n        }\r\n        this.chooseCamera$ = this.chooseCamera.subscribe((camera: MediaDeviceInfo) => this.useDevice(camera));\r\n        this.getMediaDevices().then(devices => this.foundCameras.next(devices));\r\n    }\r\n\r\n    startScanning(device: MediaDeviceInfo) {\r\n        this.useDevice(device);\r\n    }\r\n\r\n    stopScanning() {\r\n\r\n        if (this.captureTimeout) {\r\n            clearTimeout(this.captureTimeout);\r\n            this.captureTimeout = 0;\r\n        }\r\n        this.canvasHidden = false;\r\n\r\n        const stream = this.stream && this.stream.getTracks().length && this.stream;\r\n        if (stream) {\r\n            stream.getTracks().forEach(track => track.enabled && track.stop())\r\n            this.stream = null;\r\n        }\r\n    }\r\n\r\n    getMediaDevices(): Promise<MediaDeviceInfo[]> {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) return Promise.resolve([]);\r\n        return navigator.mediaDevices.enumerateDevices()\r\n            .then((devices: MediaDeviceInfo[]) => devices)\r\n            .catch((error: any): any[] => {\r\n                if (this.debug) console.warn('Error', error);\r\n                return [];\r\n            });\r\n    }\r\n\r\n    public QrDecodeCallback(decoded: string) {\r\n        if (this.stopAfterScan) {\r\n            this.stopScanning();\r\n            this.capturedQr.next(decoded);\r\n        } else {\r\n            this.capturedQr.next(decoded);\r\n            this.captureTimeout = setTimeout(() => this.captureToCanvas(), this.updateTime);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private captureToCanvas() {\r\n        try {\r\n            this.gCtx.drawImage(this.videoElement, 0, 0, this.canvasWidth, this.canvasHeight);\r\n            this.qrCode.decode(this.qrCanvas.nativeElement);\r\n        } catch (e) {\r\n            if (this.debug) console.log('[QrScanner] Thrown', e);\r\n            if (!this.stream) return;\r\n            this.captureTimeout = setTimeout(() => this.captureToCanvas(), this.updateTime);\r\n        }\r\n    }\r\n\r\n    private setStream(stream: any) {\r\n        this.canvasHidden = true;\r\n        this.gCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        this.stream = stream;\r\n        this.videoElement.srcObject = stream;\r\n        this.captureTimeout = setTimeout(() => this.captureToCanvas(), this.updateTime);\r\n    }\r\n\r\n    private useDevice(_device: MediaDeviceInfo) {\r\n        const _navigator: any = navigator;\r\n\r\n        if (this.captureTimeout) {\r\n            this.stopScanning();\r\n        }\r\n\r\n        if (!this.videoElement) {\r\n            this.videoElement = this.renderer.createElement('video');\r\n            this.videoElement.setAttribute('autoplay', 'true');\r\n            this.videoElement.setAttribute('muted', 'true');\r\n            this.renderer.appendChild(this.videoWrapper.nativeElement, this.videoElement);\r\n        }\r\n        const self = this;\r\n\r\n        let constraints: MediaStreamConstraints;\r\n        if (_device) {\r\n            constraints = {audio: false, video: {deviceId: _device.deviceId}};\r\n        } else {\r\n\r\n            constraints = {audio: false, video: true};\r\n        }\r\n        _navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\r\n            self.setStream(stream);\r\n        }).catch(function (err) {\r\n            return self.debug && console.warn('Error', err);\r\n        });\r\n    }\r\n\r\n}\r\n",
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QrScannerComponent } from './qr-scanner.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [QrScannerComponent],\r\n  exports: [QrScannerComponent]\r\n})\r\nexport class NgQrScannerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgQrScannerModule\r\n    };\r\n  }\r\n}\r\n"
  ],
  "names": [
    "AlignmentPattern",
    "posX",
    "posY",
    "estimatedModuleSize",
    "this",
    "count",
    "incrementCount",
    "aboutEquals",
    "moduleSize",
    "i",
    "j",
    "Math",
    "abs",
    "y",
    "x",
    "moduleSizeDiff",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "floor",
    "AlignmentPatternFinder",
    "image",
    "startX",
    "startY",
    "width",
    "height",
    "imageWidth",
    "imageHeight",
    "resultPointCallback",
    "possibleCenters",
    "Array",
    "crossCheckStateCount",
    "centerFromEnd",
    "stateCount",
    "end",
    "foundPatternCross",
    "maxVariance",
    "crossCheckVertical",
    "startI",
    "centerJ",
    "maxCount",
    "originalStateCountTotal",
    "maxI",
    "NaN",
    "stateCountTotal",
    "handlePossibleCenter",
    "centerI",
    "isNaN",
    "max",
    "length",
    "index",
    "point",
    "push",
    "foundPossibleResultPoint",
    "find",
    "maxJ",
    "middleI",
    "iGen",
    "currentState",
    "confirmed",
    "PerspectiveTransform",
    "a11",
    "a21",
    "a31",
    "a12",
    "a22",
    "a32",
    "a13",
    "a23",
    "a33",
    "transformPoints1",
    "points",
    "denominator",
    "transformPoints2",
    "xValues",
    "yValues",
    "n",
    "buildAdjoint",
    "times",
    "other",
    "quadrilateralToQuadrilateral",
    "x0",
    "y0",
    "x1",
    "y1",
    "x2",
    "y2",
    "x3",
    "y3",
    "x0p",
    "y0p",
    "x1p",
    "y1p",
    "x2p",
    "y2p",
    "x3p",
    "y3p",
    "qToS",
    "quadrilateralToSquare",
    "squareToQuadrilateral",
    "dy2",
    "dy3",
    "dx1",
    "dx2",
    "dx3",
    "dy1",
    "BitMatrix",
    "rowSize",
    "bits",
    "URShift",
    "number",
    "get_Renamed",
    "offset",
    "set_Renamed",
    "flip",
    "clear",
    "setRegion",
    "left",
    "top",
    "right",
    "bottom",
    "GridSampler",
    "checkAndNudgePoints",
    "nudged",
    "sampleGrid3",
    "rawImage",
    "dimension",
    "transform",
    "iValue",
    "xpoint",
    "bit",
    "data",
    "aioobe",
    "sampleGridx",
    "p1ToX",
    "p1ToY",
    "p2ToX",
    "p2ToY",
    "p3ToX",
    "p3ToY",
    "p4ToX",
    "p4ToY",
    "p1FromX",
    "p1FromY",
    "p2FromX",
    "p2FromY",
    "p3FromX",
    "p3FromY",
    "p4FromX",
    "p4FromY",
    "ErrorCorrectionLevel",
    "ordinal",
    "name",
    "ordinal_Renamed_Field",
    "forBits",
    "FOR_BITS",
    "L",
    "M",
    "Q",
    "H",
    "FormatInformation",
    "formatInfo",
    "Equals",
    "o",
    "errorCorrectionLevel",
    "dataMask",
    "GetHashCode",
    "numBitsDiffering",
    "a",
    "b",
    "BITS_SET_IN_HALF_BYTE",
    "decodeFormatInformation",
    "maskedFormatInfo",
    "doDecodeFormatInformation",
    "FORMAT_INFO_MASK_QR",
    "bestDifference",
    "bestFormatInfo",
    "FORMAT_INFO_DECODE_LOOKUP",
    "decodeInfo",
    "targetInfo",
    "bitsDifference",
    "ECB",
    "dataCodewords",
    "ECBlocks",
    "ecCodewordsPerBlock",
    "ecBlocks1",
    "ecBlocks2",
    "getECBlocks",
    "ecBlocks",
    "NumBlocks",
    "total",
    "Version",
    "versionNumber",
    "alignmentPatternCenters",
    "ecBlocks3",
    "ecBlocks4",
    "buildFunctionPattern",
    "DimensionForVersion",
    "bitMatrix",
    "getECBlocksForLevel",
    "ecLevel",
    "ecCodewords",
    "ECCodewordsPerBlock",
    "ecbArray",
    "ecBlock",
    "Count",
    "DataCodewords",
    "totalCodewords",
    "getVersionForNumber",
    "VERSIONS",
    "getProvisionalVersionForDimension",
    "iae",
    "decodeVersionInformation",
    "versionBits",
    "bestVersion",
    "VERSION_DECODE_INFO",
    "targetVersion",
    "buildVersions",
    "remove",
    "from",
    "rest",
    "slice",
    "apply",
    "FinderPattern",
    "MIN_SKIP",
    "MAX_MODULES",
    "INTEGER_MATH_SHIFT",
    "CENTER_QUORUM",
    "FinderPatternInfo",
    "patternCenters",
    "bottomLeft",
    "topLeft",
    "topRight",
    "FinderPatternFinder",
    "hasSkipped",
    "orderBestPatterns",
    "patterns",
    "distance",
    "pattern1",
    "pattern2",
    "xDiff",
    "X",
    "yDiff",
    "Y",
    "sqrt",
    "pointA",
    "pointB",
    "pointC",
    "bX",
    "bY",
    "zeroOneDistance",
    "oneTwoDistance",
    "zeroTwoDistance",
    "temp",
    "totalModuleSize",
    "CrossCheckStateCount",
    "crossCheckHorizontal",
    "startJ",
    "found",
    "center",
    "selectBestPatterns",
    "startSize",
    "square",
    "centerValue",
    "EstimatedModuleSize",
    "average",
    "sort",
    "center1",
    "center2",
    "dA",
    "dB",
    "stdDev",
    "limit",
    "pattern",
    "findRowSkip",
    "firstConfirmedCenter",
    "haveMultiplyConfirmedCenters",
    "confirmedCount",
    "totalDeviation",
    "findFinderPattern",
    "iSkip",
    "done",
    "rowSkip",
    "patternInfo",
    "DetectorResult",
    "Detector",
    "calculateModuleSizeOneWay",
    "otherPattern",
    "moduleSizeEst1",
    "sizeOfBlackWhiteBlackRunBothWays",
    "moduleSizeEst2",
    "calculateModuleSize",
    "computeDimension",
    "round",
    "findAlignmentInRegion",
    "overallEstModuleSize",
    "estAlignmentX",
    "estAlignmentY",
    "allowanceFactor",
    "allowance",
    "alignmentAreaLeftX",
    "alignmentAreaRightX",
    "min",
    "alignmentAreaTopY",
    "alignmentAreaBottomY",
    "createTransform",
    "alignmentPattern",
    "bottomRightX",
    "bottomRightY",
    "sourceBottomRightX",
    "sourceBottomRightY",
    "dimMinusThree",
    "sampleGrid",
    "detect",
    "info",
    "processFinderPatternInfo",
    "sizeOfBlackWhiteBlackRun",
    "fromX",
    "fromY",
    "toX",
    "toY",
    "steep",
    "dx",
    "dy",
    "error",
    "ystep",
    "xstep",
    "state",
    "realX",
    "realY",
    "diffX",
    "diffY",
    "diffX2",
    "diffY2",
    "result",
    "scale",
    "otherToX",
    "otherToY",
    "TopLeft",
    "TopRight",
    "BottomLeft",
    "provisionalVersion",
    "modulesBetweenFPCenters",
    "AlignmentPatternCenters",
    "correctionToTopLeft",
    "GF256Poly",
    "field",
    "coefficients",
    "divide",
    "Zero",
    "quotient",
    "remainder",
    "denominatorLeadingTerm",
    "getCoefficient",
    "Degree",
    "inverseDenominatorLeadingTerm",
    "inverse",
    "degreeDifference",
    "multiply",
    "term",
    "multiplyByMonomial",
    "iterationQuotient",
    "buildMonomial",
    "addOrSubtract",
    "coefficientsLength",
    "firstNonZero",
    "ci",
    "degree",
    "evaluateAt",
    "size",
    "GF256",
    "result2",
    "smallerCoefficients",
    "largerCoefficients",
    "sumDiff",
    "lengthDiff",
    "multiply1",
    "aCoefficients",
    "aLength",
    "bCoefficients",
    "bLength",
    "product",
    "aCoeff",
    "multiply2",
    "scalar",
    "coefficient",
    "primitive",
    "expTable",
    "logTable",
    "at0",
    "zero",
    "at1",
    "one",
    "exp",
    "log",
    "QR_CODE_FIELD",
    "DATA_MATRIX_FIELD",
    "ReedSolomonDecoder",
    "decode",
    "received",
    "twoS",
    "poly",
    "syndromeCoefficients",
    "noError",
    "evalu",
    "syndrome",
    "sigmaOmega",
    "runEuclideanAlgorithm",
    "sigma",
    "omega",
    "errorLocations",
    "findErrorLocations",
    "errorMagnitudes",
    "findErrorMagnitudes",
    "position",
    "R",
    "rLast",
    "r",
    "sLast",
    "One",
    "s",
    "tLast",
    "t",
    "rLastLast",
    "sLastLast",
    "tLastLast",
    "q",
    "dltInverse",
    "degreeDiff",
    "sigmaTildeAtZero",
    "errorLocator",
    "numErrors",
    "e",
    "errorEvaluator",
    "dataMatrix",
    "xiInverse",
    "DataMask000",
    "isMasked",
    "unmaskBitMatrix",
    "DataMask001",
    "DataMask010",
    "DataMask011",
    "DataMask100",
    "DataMask101",
    "DataMask110",
    "DataMask111",
    "DataMask",
    "forReference",
    "reference",
    "DATA_MASKS",
    "BitMatrixParser",
    "bitmatrix",
    "Dimension",
    "copyBit",
    "readFormatInformation",
    "parsedFormatInfo",
    "formatInfoBits",
    "iMin",
    "readVersion",
    "parsedVersion",
    "ijMin",
    "readCodewords",
    "version",
    "functionPattern",
    "readingUp",
    "TotalCodewords",
    "resultOffset",
    "currentByte",
    "bitsRead",
    "col",
    "DataBlock",
    "numDataCodewords",
    "codewords",
    "getDataBlocks",
    "rawCodewords",
    "totalBlocks",
    "ecBlockArray",
    "numResultBlocks",
    "numBlockCodewords",
    "shorterBlocksTotalCodewords",
    "longerBlocksStartAt",
    "shorterBlocksNumDataCodewords",
    "rawCodewordsOffset",
    "iOffset",
    "QRCodeDataBlockReader",
    "blocks",
    "numErrorCorrectionCode",
    "blockPointer",
    "bitPointer",
    "dataLength",
    "dataLengthMode",
    "getNextBits",
    "numBits",
    "mask",
    "mask1",
    "mask3",
    "bitsFirstBlock",
    "bitsSecondBlock",
    "NextMode",
    "getDataLength",
    "modeIndicator",
    "sizeOfDataLengthInfo",
    "getRomanAndFigureString",
    "intData",
    "strData",
    "tableRomanAndFigure",
    "secondLetter",
    "getFigureString",
    "get8bitByteArray",
    "output",
    "getKanjiString",
    "unicodeString",
    "tempWord",
    "shiftjisWord",
    "String",
    "fromCharCode",
    "mode",
    "temp_str",
    "ta",
    "charCodeAt",
    "temp_sbyteArray3",
    "Decoder",
    "rsDecoder",
    "parser",
    "dataBlocks",
    "totalBytes",
    "NumDataCodewords",
    "resultBytes",
    "dataBlock",
    "codewordBytes",
    "Codewords",
    "correctErrors",
    "VersionNumber",
    "Bits",
    "numCodewords",
    "codewordsInts",
    "numECCodewords",
    "rse",
    "QRCode",
    "debug",
    "maxImgSize",
    "canvas",
    "context",
    "getContext",
    "imagedata",
    "getImageData",
    "process",
    "myCallback",
    "start",
    "Date",
    "getTime",
    "grayScaleToBitmap",
    "grayscale",
    "putImageData",
    "qRCodeMatrix",
    "DataByte",
    "str",
    "time",
    "console",
    "grayScale",
    "middle",
    "getMiddleBrightnessPerArea",
    "sqrtNumArea",
    "areaWidth",
    "areaHeight",
    "bitmap",
    "ay",
    "ax",
    "ret",
    "gray",
    "getPixel",
    "minmax",
    "i2",
    "target",
    "i3",
    "QrScannerComponent",
    "renderer",
    "canvasWidth",
    "canvasHeight",
    "stopAfterScan",
    "updateTime",
    "capturedQr",
    "EventEmitter",
    "foundCameras",
    "chooseCamera",
    "Subject",
    "canvasHidden",
    "createElement",
    "ngOnInit",
    "ngOnDestroy",
    "chooseCamera$",
    "unsubscribe",
    "stopScanning",
    "ngAfterViewInit",
    "_this",
    "isCanvasSupported",
    "gCtx",
    "qrCanvas",
    "nativeElement",
    "clearRect",
    "qrCode",
    "decoded",
    "QrDecodeCallback",
    "subscribe",
    "camera",
    "useDevice",
    "getMediaDevices",
    "then",
    "devices",
    "next",
    "startScanning",
    "device",
    "captureTimeout",
    "clearTimeout",
    "stream",
    "getTracks",
    "forEach",
    "track",
    "enabled",
    "stop",
    "navigator",
    "mediaDevices",
    "enumerateDevices",
    "catch",
    "warn",
    "Promise",
    "resolve",
    "setTimeout",
    "captureToCanvas",
    "drawImage",
    "videoElement",
    "setStream",
    "srcObject",
    "_device",
    "_navigator",
    "setAttribute",
    "appendChild",
    "videoWrapper",
    "constraints",
    "self",
    "audio",
    "video",
    "deviceId",
    "getUserMedia",
    "err",
    "type",
    "Component",
    "args",
    "selector",
    "styles",
    "template",
    "Renderer2",
    "Input",
    "Output",
    "ViewChild",
    "NgQrScannerModule",
    "forRoot",
    "ngModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
